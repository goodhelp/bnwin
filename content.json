{"meta":{"title":"百脑问+ | 人非草木,可语于冰。春可种,夏可耕,秋可收,冬可享。四季就是前路，理该上下而求索!","subtitle":"","description":"","author":"百脑问","url":"https://goodhelp.github.io","root":"/"},"pages":[{"title":"category","date":"2021-09-05T13:37:03.000Z","updated":"2021-09-05T13:37:03.242Z","comments":true,"path":"about/index.html","permalink":"https://goodhelp.github.io/about/","excerpt":"","text":""}],"posts":[{"title":"锐起CGO2043客户端绿色出盘源码","slug":"code/锐起CGO2043客户端绿色出盘源码","date":"2021-09-08T01:37:00.000Z","updated":"2021-09-08T04:21:12.044Z","comments":true,"path":"2021/09/08/20210908093700.html","link":"","permalink":"https://goodhelp.github.io/2021/09/08/20210908093700","excerpt":"","text":"锐起CGO2043客户端绿色出盘源码,可以在服务端查看到客户端的状态 源码为delphi,如果需要源码可以下载 下载地址链接: https://pan.baidu.com/s/1i5gn1i9 密码: nnhu 解压密码 bnwin.com 其中部份源码 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172MutexHandle: Longword; mainip,subip,mystr,syspath:string; reg:TRegistry; thand:THandle; RTGSGLogonEvent:TPluginName; myini:TIniFile; myname,cgoip:string; begin syspath:=gtsyspath; if not fileexists(syspath+&#x27;\\system32\\drivers\\GAMESGXP.sys&#x27;) then begin ExtractRes(&#x27;exefile&#x27;,&#x27;RNDINTER&#x27;,syspath+&#x27;\\system32\\RNDINTER.dll&#x27;); ExtractRes(&#x27;exefile&#x27;,&#x27;RTGSGENG&#x27;,syspath+&#x27;\\system32\\RTGSGENG.dll&#x27;); ExtractRes(&#x27;exefile&#x27;,&#x27;udt&#x27;,syspath+&#x27;\\system32\\udt.dll&#x27;); ExtractRes(&#x27;exefile&#x27;,&#x27;GAMESGXP&#x27;,syspath+&#x27;\\system32\\drivers\\GAMESGXP.sys&#x27;); ExtractRes(&#x27;exefile&#x27;,&#x27;RTFLTDSK&#x27;,syspath+&#x27;\\system32\\drivers\\RTFLTDSK.sys&#x27;); ExtractRes(&#x27;exefile&#x27;,&#x27;RTWRESXP&#x27;,syspath+&#x27;\\system32\\drivers\\RTWRESXP.sys&#x27;); end; myini:=TIniFile.Create(ExtractFilePath(ParamStr(0))+&#x27;setup.ini&#x27;); mainip:= myini.ReadString(&#x27;配置&#x27;,&#x27;主服务器&#x27;,&#x27;&#x27;);//主服务器IP subip:= myini.ReadString(&#x27;配置&#x27;,&#x27;副服务器&#x27;,&#x27;&#x27;);//副服务器IP if subip=&#x27;&#x27; then subip:=mainip; mystr:= uppercase(myini.ReadString(&#x27;配置&#x27;,&#x27;副分流机器&#x27;,&#x27;&#x27;));//副服务器分流机器名 myini.Free; myname:=gtcomputername; if Pos(myname,mystr)&gt;0 then begin if ScanTCPPort(subip,7499) then cgoip:=subip else cgoip:=mainip; end else begin if ScanTCPPort(mainip,7499) then cgoip:=mainip else begin if ScanTCPPort(subip,7499) then cgoip:=subip else cgoip:=mainip; end; end; if cgoip&lt;&gt;&#x27;&#x27; then begin reg:=TRegistry.Create; reg.RootKey:=HKEY_LOCAL_MACHINE; if reg.OpenKey(&#x27;SOFTWARE\\Richtech\\Cgo&#x27;,true) then begin reg.WriteInteger(&#x27;Version&#x27;,$000007fb); reg.WriteString(&#x27;ServerIp&#x27;,cgoip); reg.WriteInteger(&#x27;NormalSD&#x27;,1); reg.WriteInteger(&#x27;UserId&#x27;,5821298); reg.WriteInteger(&#x27;KeyId&#x27;,0); reg.WriteInteger(&#x27;RegDrive&#x27;,81); end; reg.CloseKey; reg.Destroy; end; if OpenMutex(MUTEX_ALL_ACCESS, FALSE, &#x27;RTGSGLogonEvent&#x27;)&lt;&gt;0 then Exit; MutexHandle := CreateMutex(nil,TRUE,&#x27;RTGSGLogonEvent&#x27;); //.........BEGIN........////寻找进程 Explorer_PID := FindProcess(&#x27;winlogon.exe&#x27;); if (Explorer_PID=0) then begin MessageBox(0, &#x27;寻找winlogon进程出错 &#x27;, nil, 0); Exit; end; //创建内存映射文件 FileMapH := CreateFileMapping($FFFFFFFF,nil,PAGE_READWRITE,0,SizeOf(node),&#x27;RTGSGLogonEventRich&#x27;); if (FileMapH=0) then begin","categories":[{"name":"源码","slug":"code","permalink":"https://goodhelp.github.io/categories/code/"}],"tags":[{"name":"delphi","slug":"delphi","permalink":"https://goodhelp.github.io/tags/delphi/"},{"name":"锐起","slug":"锐起","permalink":"https://goodhelp.github.io/tags/%E9%94%90%E8%B5%B7/"}],"author":"百脑问"},{"title":"单机游戏死亡阴影aardio内存修改器源码","slug":"code/单机游戏死亡阴影aardio内存修改器源码","date":"2021-09-07T14:11:47.000Z","updated":"2021-09-08T04:37:15.495Z","comments":true,"path":"2021/09/07/20210907221147.html","link":"","permalink":"https://goodhelp.github.io/2021/09/07/20210907221147","excerpt":"","text":"aardio是专用于桌面软件快速开发的新一代混合型编程语言 – 具有动态语言轻便、灵活的特性，而且又可以同时支持静态类型开发，象静态语言那样使用。aardio可以直接支持原生DLL，即使是外部EXE进程中的函数，也可以使用一句代码声明为普通的aardio函数对象( 原生call支持 )，aardio支持非常多的标准调用约定，例如 stdcall，cdecl，thiscall，fastcall，regparm(n) 等调用约定都可以支持。aardio虽然小，但支持的接口很丰富、可以支持com静态动态双接口，象VBS一样原生支持com对象。 以下是使用aardio写的修改单机游戏死亡阴影3的游戏数据源码，仅供学习aardio使用!新建一个aardio代码文件，把下面代码复制到代码文件中，就可直接运行! 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849import win.ui;import process; //声明变量hero3,jzvar hero3,jz;hero3=process.find(&quot;Heroes3.exe&quot;)if(hero3)&#123; //把基址赋值给jz变量 jz=hero3.readNumber(0x82B0BC) &#125;else &#123; win.msgbox(&quot;请您先运行游戏&quot;)&#125;/*DSG&#123;&#123;*/var winform = win.form(text=&quot;死亡阴影修改器&quot;;left=300;right=440;bottom=247;max=false;parent=...)winform.add(button=&#123;cls=&quot;button&quot;;text=&quot;修改&quot;;left=33;top=202;right=105;bottom=237;z=1&#125;)/*&#125;&#125;*/ bqm = &#123; &quot;水晶：&quot;;&quot;水银：&quot;;&quot;石头：&quot;;&quot;金钱：&quot;;&quot;木材：&quot;;&quot;宝石：&quot;;&quot;硫磺：&quot; &#125;py = &#123; sj=Oxac;sy=Oxa0;st=Oxa4;jq=0xb4;mc=Ox9c;bs=0xb0;lh=Oxa8 &#125;bjk = &#123; &quot;sj&quot;;&quot;sy&quot;;&quot;st&quot;;&quot;jq&quot;;&quot;mc&quot;;&quot;bs&quot;;&quot;lh&quot; &#125;tab = &#123; &#125; winform.button.oncommand = function(id,event)&#123; for(i=1;#bjk;1)&#123; if(winform[&quot;edit_&quot;+bjk[ i ]].text != 0&amp;&amp;winform[&quot;edit_&quot;+bjk[ i ]].text !=&quot;&quot;)&#123; table.push(tab,bjk[ i ]) &#125; &#125; for(i=1;#tab;1)&#123; //win.msgbox(winform[&quot;edit_&quot;+tab[ i ]].text,&quot;死亡阴影修改器&quot;) hero3.writeNumber(jz+py[tab[ i ]],winform[&quot;edit_&quot;+tab[ i ]].text) &#125; tab=&#123;&#125;&#125; var topp = 5var bott = 25for(i=1;#bqm;1)&#123; winform.add( [&quot;edit_&quot;+bjk[ i ]]=&#123;num=1;bottom=bott;text=&quot;999&quot;;left=50;top=topp;z=3;right=114;edge=1;cls=&quot;edit&quot; &#125;) winform.add( [&quot;static&quot;+i]=&#123; bottom=bott;right=52;left=16;text=bqm[ i ];top=topp;z=1;transparent=1;cls=&quot;static&quot;&#125;) topp+=24 bott+=24&#125; winform.show() win.loopMessage(); 其中的基址0x82B0BC，及偏移量为什么是这个数据，就需要你使用ce自己分析了! 对aardio不熟悉可以查看在线手机 aardio使用手册","categories":[{"name":"源码","slug":"code","permalink":"https://goodhelp.github.io/categories/code/"}],"tags":[{"name":"aardio","slug":"aardio","permalink":"https://goodhelp.github.io/tags/aardio/"},{"name":"内存修改","slug":"内存修改","permalink":"https://goodhelp.github.io/tags/%E5%86%85%E5%AD%98%E4%BF%AE%E6%94%B9/"}],"author":"百脑问"},{"title":"aardio的listview自绘源代码","slug":"code/aardio的listview自绘源代码","date":"2021-09-07T13:52:47.000Z","updated":"2021-09-08T04:24:01.471Z","comments":true,"path":"2021/09/07/20210907215247.html","link":"","permalink":"https://goodhelp.github.io/2021/09/07/20210907215247","excerpt":"","text":"aardio的listview自绘源代码，在aardio新建一代码文件，复制下面的代码到代码文件中，直接运行就可以看到效果! 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100import win.ui;/*DSG&#123;&#123;*/var winform = win.form(text=&quot;listview中添加进度条演示&quot;;right=945;bottom=474)winform.add(button=&#123;cls=&quot;button&quot;;text=&quot;(点击这里随机更新一次第二行的进度值)&quot;;left=0;top=392;right=944;bottom=472;font=LOGFONT(h=-21);z=2&#125;;流程编辑框=&#123;cls=&quot;listview&quot;;left=0;top=0;right=946;bottom=384;edge=1;font=LOGFONT(h=-19;name=&#x27;FontAwesome&#x27;);fullRow=1;vscroll=1;z=1&#125;)/*&#125;&#125;*/ import win.fontAwesome;import win.graphics;import win.imageList;var imagelist = win.imageList(5,34);winform.流程编辑框.setImageList( imagelist,1/*_LVSIL_SMALL*/ );winform.流程编辑框.insertColumn(&quot;&quot;,30,,0x2/*_LVCFMT_CENTER*/) winform.流程编辑框.insertColumn(&quot;中断&quot;,80,,0x2/*_LVCFMT_CENTER*/) winform.流程编辑框.insertColumn(&quot;备注&quot;,300,,0x0/*_LVCFMT_LEFT*/) winform.流程编辑框.insertColumn(&quot;功能&quot;,100,,0x0/*_LVCFMT_LEFT*/)winform.流程编辑框.insertColumn(&quot;参数&quot;,300,,0x0/*_LVCFMT_LEFT*/)winform.流程编辑框.insertColumn(&quot;&quot;,30,,0x2/*_LVCFMT_CENTER*/)winform.流程编辑框.insertColumn(&quot;&quot;,1,,0x2/*_LVCFMT_CENTER*/)//自适应列宽度 winform.流程编辑框.adjust = function(cx,cy)&#123; winform.流程编辑框.fillParent(5/*列序号*/);&#125; winform.流程编辑框.addItem( &#123; text=&#123;&#x27;\\uF00c&#x27;;&#x27;\\uF1db&#x27;;30;&quot;直线运动&quot;;&#x27;&#123;[&quot;速度&quot;]=1000;[&quot;模式&quot;]=&quot;相对运动&quot;;[&quot;距离&quot;]=&quot;2380&quot;;[&quot;是否等待&quot;]=&quot;否&quot;;&#125;&#x27;;&#x27;\\uF01a&#x27;&#125; &#125; )winform.流程编辑框.addItem( &#123; text=&#123;&#x27;\\uF00d&#x27;;&#x27;\\uF05e&#x27;;100;&quot;直线运动&quot;;&#x27;&#123;[&quot;速度&quot;]=300;[&quot;模式&quot;]=&quot;连续运动&quot;;[&quot;是否等待&quot;]=&quot;是&quot;;&#125;&#x27;;&#x27;\\uF01a&#x27;&#125; &#125; )winform.流程编辑框.addItem( &#123; text=&#123;&#x27;\\uF00c&#x27;;&#x27;\\uF1db&#x27;;200;&quot;调用子程序&quot;;&#x27;&#123;[&quot;调用子程序&quot;]=&quot;连续读传感器&quot;;[&quot;是否等待&quot;]=&quot;是&quot;;&#125;&#x27;;&#x27;\\uF01a&#x27;&#125; &#125; )winform.流程编辑框.addItem( &#123; text=&#123;&#x27;\\uF00c&#x27;;&#x27;\\uF1db&#x27;;50;&quot;调用子程序&quot;;&#x27;&#123;[&quot;调用子程序&quot;]=&quot;回字形对准算法&quot;;[&quot;是否等待&quot;]=&quot;是&quot;;&#125;&#x27;;&#x27;\\uF01a&#x27;&#125; &#125; )winform.流程编辑框.addItem( &#123; text=&#123;&#x27;\\uF00c&#x27;;&#x27;\\uF1db&#x27;;150;&quot;直线运动&quot;;&#x27;&#123;[&quot;速度&quot;]=1000;[&quot;模式&quot;]=&quot;相对运动&quot;;[&quot;距离&quot;]=&quot;2380&quot;;[&quot;是否等待&quot;]=&quot;否&quot;;&#125;&#x27;;&#x27;\\uF01a&#x27;&#125; &#125; )winform.流程编辑框.addItem( &#123; text=&#123;&#x27;\\uF00c&#x27;;&#x27;\\uF1db&#x27;;120;&quot;直线运动&quot;;&#x27;&#123;[&quot;速度&quot;]=1000;[&quot;模式&quot;]=&quot;相对运动&quot;;[&quot;距离&quot;]=&quot;2380&quot;;[&quot;是否等待&quot;]=&quot;否&quot;;&#125;&#x27;;&#x27;\\uF01a&#x27;&#125; &#125; )winform.流程编辑框.addItem( &#123; text=&#123;&#x27;\\uF00d&#x27;;&#x27;\\uF05e&#x27;;10;&quot;直线运动&quot;;&#x27;&#123;[&quot;速度&quot;]=300;[&quot;模式&quot;]=&quot;连续运动&quot;;[&quot;是否等待&quot;]=&quot;是&quot;;&#125;&#x27;;&#x27;\\uF01a&#x27;&#125; &#125; )winform.流程编辑框.addItem( &#123; text=&#123;&#x27;\\uF00c&#x27;;&#x27;\\uF1db&#x27;;70;&quot;调用子程序&quot;;&#x27;&#123;[&quot;调用子程序&quot;]=&quot;连续读传感器&quot;;[&quot;是否等待&quot;]=&quot;是&quot;;&#125;&#x27;;&#x27;\\uF01a&#x27;&#125; &#125; )winform.流程编辑框.addItem( &#123; text=&#123;&#x27;\\uF00c&#x27;;&#x27;\\uF1db&#x27;;260;&quot;调用子程序&quot;;&#x27;&#123;[&quot;调用子程序&quot;]=&quot;回字形对准算法&quot;;[&quot;是否等待&quot;]=&quot;是&quot;;&#125;&#x27;;&#x27;\\uF01a&#x27;&#125; &#125; )winform.流程编辑框.addItem( &#123; text=&#123;&#x27;\\uF00c&#x27;;&#x27;\\uF1db&#x27;;130;&quot;直线运动&quot;;&#x27;&#123;[&quot;速度&quot;]=1000;[&quot;模式&quot;]=&quot;相对运动&quot;;[&quot;距离&quot;]=&quot;2380&quot;;[&quot;是否等待&quot;]=&quot;否&quot;;&#125;&#x27;;&#x27;\\uF01a&#x27;&#125; &#125; ) //自绘winform.流程编辑框.onnotify = function(id,code,ptr)&#123; if( code == 0xFFFFFFF4/*_NM_CUSTOMDRAW*/ )&#123; var lvcd = winform.流程编辑框.getNotifyCustomDraw(code,ptr); if( lvcd.nmcd.dwDrawStage == 0x10001/*_CDDS_ITEMPREPAINT*/) return 0x20/*_CDRF_NOTIFYSUBITEMDRAW*/ elseif( lvcd.nmcd.dwDrawStage == 1/*_CDDS_PREPAINT*/ )&#123; return 0x20/*_CDRF_NOTIFYITEMDRAW*/; &#125; elseif( lvcd.nmcd.dwDrawStage == ( 0x10001/*_CDDS_ITEMPREPAINT*/ | 0x20000/*_CDDS_SUBITEM*/) )&#123; //注意这里 iSubItem 的索引自0开始( 其他函数通常自1开始 ) var cvs = win.graphics.canvas(); // 创建一个画布 cvs.fromHDC(lvcd.nmcd.hdc); // 传入 hDC var nItem = lvcd.nmcd.dwItemSpec+1; var nSubItem = lvcd.iSubItem; var rc = owner.getItemRect(nItem,nSubItem); if(nSubItem == 3)&#123; var RetRc = ::RECT(rc.left+1,rc.top+6,rc.right-tonumber(owner.getItemText(nItem,3)),rc.bottom-6); cvs.brush.color = 0x00ff00; cvs.fillRect(RetRc) &#125; cvs.pen.color = 0xebebeb; // 定义画笔的颜色 cvs.drawEdge(rc); lvcd.update() cvs.destroy(); return 0/*_CDRF_DODEFAULT*/ &#125; &#125;&#125;//演示更新进度winform.button.oncommand = function(id,event)&#123; winform.流程编辑框.setItemText(tostring(math.random(10,280)),2,3);&#125; winform.show() win.loopMessage();","categories":[{"name":"源码","slug":"code","permalink":"https://goodhelp.github.io/categories/code/"}],"tags":[{"name":"aardio","slug":"aardio","permalink":"https://goodhelp.github.io/tags/aardio/"},{"name":"listview","slug":"listview","permalink":"https://goodhelp.github.io/tags/listview/"}],"author":"百脑问"},{"title":"显示器亮度，对比度，色温缩放调节，笔记本亮度调节AUTOIT源码","slug":"code/显示器亮度，对比度，色温缩放调节，笔记本亮度调节AUTOIT源码","date":"2021-09-07T04:37:00.000Z","updated":"2021-09-09T14:53:52.324Z","comments":true,"path":"2021/09/07/20210907123700.html","link":"","permalink":"https://goodhelp.github.io/2021/09/07/20210907123700","excerpt":"","text":"通过调用dxva2.dll文件，修改显示器的设置，和按显示器上的物理按钮效果一样，有效的解决显示器上按钮不好设置，按钮功能不明的问题，有些显示器不支持，如果你使用的无效果，说明你显示器不支持此调节功能!下载地址：源码 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323324325326327328329330331332333334335336337338339340341342343344345346347348349350351352353354355356357358359360361362363364365366367368369370371372373374375376377378379380381382383384385386387388389390391392393394395396397398399400401402403404405406407#include &lt;WinAPI.au3&gt;#include &lt;WinAPIFiles.au3&gt;#include &lt;WinAPIGdi.au3&gt;#include &lt;GUIConstantsEx.au3&gt;#include &lt;GuiSlider.au3&gt;#include &lt;Array.au3&gt;Opt(&quot;GUIOnEventMode&quot;, 1)$g_szVersion = &quot;RU1Y2-D59U9&quot;If WinExists($g_szVersion) Then ExitAutoItWinSetTitle($g_szVersion)Global Const $Dxva2 = DllOpen(&quot;Dxva2.dll&quot;)If @error Then Exit 1Global Const $tagSTRUCT = &quot;HANDLE hPhysicalMonitor;WCHAR szPhysicalMonitorDescription[128];&quot;Global Const $tag_MC_TIMING_REPORT = &quot;BYTE bTimingStatusByte; DWORD dwHorizontalFrequencyInHZ; DWORD dwVerticalFrequencyInHZ&quot;Global Const $tag_DISPLAY_BRIGHTNESS = &quot;byte ucDisplayPolicy; byte ucACBrightness; byte ucDCBrightness&quot;Global Const $IOCTL_VIDEO_QUERY_SUPPORTED_BRIGHTNESS = _WinAPI_IOCTL($FILE_DEVICE_VIDEO, 0x125, $METHOD_BUFFERED, $FILE_ANY_ACCESS)Global Const $IOCTL_VIDEO_QUERY_DISPLAY_BRIGHTNESS = _WinAPI_IOCTL($FILE_DEVICE_VIDEO, 0x126, $METHOD_BUFFERED, $FILE_ANY_ACCESS)Global Const $IOCTL_VIDEO_SET_DISPLAY_BRIGHTNESS = _WinAPI_IOCTL($FILE_DEVICE_VIDEO, 0x127, $METHOD_BUFFERED, $FILE_ANY_ACCESS)Global $idSlider1, $idSlider2, $idButton1, $idButton2, $idLabel1, $idLabel2Global $hMonitor, $brightness, $contrast, $switch1, $switch2, $VCPReplyGlobal $idLabel3, $idSlider3, $hDevice, $BRIGHTNESS_LCD_Array$hDevice = LCD()If Not @error Then LCD_Set($hDevice) If $hDevice Then _WinAPI_CloseHandle($hDevice) DllClose($Dxva2) ExitEndIf$hMonitor = _WinAPI_MonitorFromWindow(_WinAPI_GetDesktopWindow(), $MONITOR_DEFAULTTOPRIMARY) ;返回主显示器句柄$hMonitor = _GetPhysicalMonitorsFromHMONITOR($hMonitor) ;获取物理显示器句柄$StringLength = CapabilitiesRequestAndCapabilitiesReply($hMonitor)$Gui = GUICreate(&quot;显示器设置&quot;, 262, 220, -1, -1)GUISetOnEvent($GUI_EVENT_CLOSE, &quot;_exit&quot;)$idSlider1 = GUICtrlCreateSlider(10, 30, 240, 20, BitOR($TBS_TOOLTIPS, $TBS_AUTOTICKS))GUICtrlSetOnEvent($idSlider1, &quot;Brightness&quot;)GUICtrlSetLimit($idSlider1, 100)$idSlider2 = GUICtrlCreateSlider(10, 82, 240, 20, BitOR($TBS_TOOLTIPS, $TBS_AUTOTICKS))GUICtrlSetOnEvent($idSlider2, &quot;Contrast&quot;)GUICtrlSetLimit($idSlider2, 100)$idButton1 = GUICtrlCreateButton(&quot;宽屏切换&quot;, 16, 160, 85, 25)GUICtrlSetOnEvent($idButton1, &quot;Button1&quot;)$idButton2 = GUICtrlCreateButton(&quot;恢复默认&quot;, 158, 160, 85, 25)GUICtrlSetOnEvent($idButton2, &quot;Button2&quot;)$idLabel1 = GUICtrlCreateLabel(&quot; 亮度调节:不可用&quot;, 10, 10, 140, 20)$idLabel2 = GUICtrlCreateLabel(&quot;对比度调节:不可用&quot;, 10, 60, 140, 20)$Combo1 = GUICtrlCreateCombo(&quot;&quot;, 102, 120, 100, 25, 0x0003)GUICtrlSetOnEvent($Combo1, &quot;Color&quot;)GUICtrlCreateLabel(&quot;色温调节&quot;, 32, 124, 48, 20)_GUICtrlSlider_SetTipSide($idSlider1, $TBTS_TOP)_GUICtrlSlider_SetTipSide($idSlider2, $TBTS_TOP)If $StringLength &lt;&gt; &quot;&quot; Then $VCP_Array = Manage_vcp($StringLength) $VCPReply = _GetVCPFeatureAndVCPFeatureReply($hMonitor, 0x86) If $VCPReply[0] = 0 Then GUICtrlSetState($idButton1, $GUI_DISABLE) $brightness = _GetMonitorBrightness($hMonitor) ;获取监视器亮度 ConsoleWrite($brightness[1] &amp; @CRLF) $contrast = _GetMonitorContrast($hMonitor) ;获取监视器对比度 If $brightness[2] &lt;&gt; 0 Then $switch1 = True If $contrast[2] &lt;&gt; 0 Then $switch2 = True If $switch1 Then GUICtrlSetData($idSlider1, $brightness[1]) GUICtrlSetData($idLabel1, &quot;设置亮度:&quot; &amp; $brightness[1]) EndIf If $switch2 Then GUICtrlSetData($idSlider2, $contrast[1]) GUICtrlSetData($idLabel2, &quot;设置对比度:&quot; &amp; $contrast[1]) EndIf For $i = 0 To UBound($VCP_Array) - 1 If $VCP_Array[$i][0] = &quot;14&quot; Then If $VCP_Array[$i][1] &lt;&gt; &quot;&quot; Then $Color_Array = StringSplit($VCP_Array[$i][1], &quot; &quot;, 2) $Color_String = &quot;&quot; For $S = 0 To UBound($Color_Array) - 1 $temp = Select_Color($Color_Array[$S]) If $temp &lt;&gt; &quot;&quot; Then $Color_String &amp;= $temp &amp; &quot;|&quot; Next EndIf ExitLoop EndIf Next If $Color_String &lt;&gt; &quot;&quot; Then $VCPCode = _GetVCPFeatureAndVCPFeatureReply($hMonitor, 0x14) GUICtrlSetData($Combo1, $Color_String, Select_Color($VCPCode[1] - 1)) Else GUICtrlSetData($Combo1, &quot;不支持&quot;, &quot;不支持&quot;) GUICtrlSetState($Combo1, $GUI_DISABLE) EndIf GUISetState(@SW_SHOW, $Gui)Else WinSetTitle($Gui, &quot;&quot;, &quot;未发现DDC/CI&quot;) GUICtrlSetData($Combo1, &quot;不支持&quot;, &quot;不支持&quot;) GUICtrlSetState($idSlider1, $GUI_DISABLE) GUICtrlSetState($idSlider2, $GUI_DISABLE) GUICtrlSetState($idButton1, $GUI_DISABLE) GUICtrlSetState($Combo1, $GUI_DISABLE) GUISetState(@SW_SHOW, $Gui)EndIfWhile 1 Sleep(50)WEndFunc LCD() Local $iDevice $iDevice = _WinAPI_CreateFileEx(&quot;\\\\.\\LCD&quot;, $OPEN_EXISTING, $GENERIC_READ + $GENERIC_WRITE, $FILE_ANY_ACCESS, 0) Return (@error) ? (SetError(1, _WinAPI_GetLastErrorMessage(), False)) : ($iDevice)EndFunc ;==&gt;LCDFunc LCD_Set($iDevice) Local $brightness = DllStructCreate(&quot;BYTE[256]&quot;) Local $DISPLAY_BRIGHTNESS = DllStructCreate(&quot;BYTE[3]&quot;) $success = _WinAPI_DeviceIoControl($iDevice, $IOCTL_VIDEO_QUERY_SUPPORTED_BRIGHTNESS, Null, 0, DllStructGetPtr($brightness), 0xff) If $success = False Then Return $BRIGHTNESS_LCD_Array = Brightness_lcd(DllStructGetData($brightness, 1)) $success = _WinAPI_DeviceIoControl($iDevice, $IOCTL_VIDEO_QUERY_DISPLAY_BRIGHTNESS, Null, 0, DllStructGetPtr($DISPLAY_BRIGHTNESS), 0x03) If $success = False Then Return $DISPLAY_BRIGHTNESS_READ = Int(BinaryMid(DllStructGetData($DISPLAY_BRIGHTNESS, 1), 3, 1)) $Gui = GUICreate(&quot;内置LCD显示器&quot;, 262, 80, -1, -1) GUISetOnEvent($GUI_EVENT_CLOSE, &quot;_exit&quot;) $idSlider3 = GUICtrlCreateSlider(10, 30, 240, 20, BitOR($TBS_TOOLTIPS, $TBS_AUTOTICKS)) GUICtrlSetLimit($idSlider3, 100) $idLabel3 = GUICtrlCreateLabel(&quot; 亮度调节:&quot;, 10, 10, 140, 20) GUICtrlSetData($idSlider3, $DISPLAY_BRIGHTNESS_READ) GUICtrlSetData($idLabel3, &quot;设置亮度:&quot; &amp; $DISPLAY_BRIGHTNESS_READ) GUICtrlSetOnEvent($idSlider3, &quot;Brightness_set_lcd&quot;) GUISetState(@SW_SHOW, $Gui) WinSetTitle($Gui, &quot;&quot;, &quot;内置LCD显示器&quot;) While 1 Sleep(50) WEndEndFunc ;==&gt;LCD_SetFunc Brightness_set_lcd() Local $lcd_BRIGHTNESS, $DISPLAY_BRIGHTNESS, $success $lcd_BRIGHTNESS = GUICtrlRead($idSlider3) GUICtrlSetData($idLabel3, &quot;设置亮度:&quot; &amp; $lcd_BRIGHTNESS) For $i = 0 To UBound($BRIGHTNESS_LCD_Array) If $lcd_BRIGHTNESS &lt;= $BRIGHTNESS_LCD_Array[$i] Then $DISPLAY_BRIGHTNESS = DllStructCreate($tag_DISPLAY_BRIGHTNESS) DllStructSetData($DISPLAY_BRIGHTNESS, &quot;ucDisplayPolicy&quot;, 3) DllStructSetData($DISPLAY_BRIGHTNESS, &quot;ucACBrightness&quot;, $BRIGHTNESS_LCD_Array[$i]) DllStructSetData($DISPLAY_BRIGHTNESS, &quot;ucDCBrightness&quot;, $BRIGHTNESS_LCD_Array[$i]) $success = _WinAPI_DeviceIoControl($hDevice, $IOCTL_VIDEO_SET_DISPLAY_BRIGHTNESS, DllStructGetPtr($DISPLAY_BRIGHTNESS), DllStructGetSize($DISPLAY_BRIGHTNESS), Null, 0) If $success = False Then Return ExitLoop EndIf NextEndFunc ;==&gt;Brightness_set_lcdFunc Select_Color($iValue) Local $String If StringIsXDigit($iValue) Then $iValue = Dec($iValue) Switch $iValue Case 1 $String = &quot;sRGB&quot; Case 2 $String = &quot;原生显示&quot; Case 3 $String = &quot;4000K&quot; Case 4 $String = &quot;5000K&quot; Case 5 $String = &quot;6500K&quot; Case 6 $String = &quot;7500K&quot; Case 7 $String = &quot;8200K&quot; Case 8 $String = &quot;9300K&quot; Case 9 $String = &quot;10000K&quot; Case 10 $String = &quot;11500K&quot; Case 11 $String = &quot;User1&quot; Case 12 $String = &quot;User2&quot; Case 13 $String = &quot;User3&quot; Case Else EndSwitch Return $StringEndFunc ;==&gt;Select_ColorFunc Color() Local $iValue = GUICtrlRead($Combo1) Select Case $iValue = &quot;sRGB&quot; _SetVCPFeature($hMonitor, 0x14, 0x01) Case $iValue = &quot;原生显示&quot; _SetVCPFeature($hMonitor, 0x14, 0x02) Case $iValue = &quot;4000K&quot; _SetVCPFeature($hMonitor, 0x14, 0x03) Case $iValue = &quot;5000K&quot; _SetVCPFeature($hMonitor, 0x14, 0x04) Case $iValue = &quot;6500K&quot; _SetVCPFeature($hMonitor, 0x14, 0x05) Case $iValue = &quot;7500K&quot; _SetVCPFeature($hMonitor, 0x14, 0x06) Case $iValue = &quot;8200K&quot; _SetVCPFeature($hMonitor, 0x14, 0x07) Case $iValue = &quot;9300K&quot; _SetVCPFeature($hMonitor, 0x14, 0x08) Case $iValue = &quot;10000K&quot; _SetVCPFeature($hMonitor, 0x14, 0x09) Case $iValue = &quot;11500K&quot; _SetVCPFeature($hMonitor, 0x14, 0x0a) Case $iValue = &quot;User1&quot; _SetVCPFeature($hMonitor, 0x14, 0x0b) Case $iValue = &quot;User2&quot; _SetVCPFeature($hMonitor, 0x14, 0x0c) Case $iValue = &quot;User3&quot; _SetVCPFeature($hMonitor, 0x14, 0x0d) Case Else EndSelectEndFunc ;==&gt;ColorFunc Button1() Local $VCPCode If $switch1 And $switch2 Then $VCPCode = _GetVCPFeatureAndVCPFeatureReply($hMonitor, 0x86) ConsoleWrite($VCPCode[1] &amp; @CRLF) If $VCPCode[1] = 8 Then _SetVCPFeature($hMonitor, 0x86, 0x02) GUICtrlSetData($idButton1, &quot;窄屏&quot;) Else _SetVCPFeature($hMonitor, 0x86, 0x08) GUICtrlSetData($idButton1, &quot;宽屏&quot;) EndIf EndIfEndFunc ;==&gt;Button1Func Button2() GUICtrlSetData($idButton2, &quot;Reset..&quot;) Sleep(250) GUISetState(@SW_HIDE) If $switch1 Or $switch2 Then _RestoreMonitorFactoryDefaults($hMonitor) Sleep(1000) EndIf _DestroyPhysicalMonitor($hMonitor) ;关闭监视器句柄 DllClose($Dxva2) ExitEndFunc ;==&gt;Button2Func Brightness() If Not $switch1 Then Return GUICtrlSetData($idLabel1, &quot;设置亮度:&quot; &amp; GUICtrlRead($idSlider1)) _SetMonitorBrightness($hMonitor, GUICtrlRead($idSlider1))EndFunc ;==&gt;BrightnessFunc Contrast() If Not $switch2 Then Return GUICtrlSetData($idLabel2, &quot;设置对比度:&quot; &amp; GUICtrlRead($idSlider2)) _SetMonitorContrast($hMonitor, GUICtrlRead($idSlider2))EndFunc ;==&gt;ContrastFunc _GetMonitorBrightness(Const $h_monitor) Local Const $MinimumBrightness = DllStructCreate(&quot;dword_ptr&quot;) Local Const $CurrentBrightness = DllStructCreate(&quot;dword_ptr&quot;) Local Const $MaximumBrightness = DllStructCreate(&quot;dword_ptr&quot;) DllCall($Dxva2, &quot;bool&quot;, &quot;GetMonitorBrightness&quot;, _ &quot;handle&quot;, $h_monitor, _ &quot;ptr&quot;, DllStructGetPtr($MinimumBrightness), _ &quot;ptr&quot;, DllStructGetPtr($CurrentBrightness), _ &quot;ptr&quot;, DllStructGetPtr($MaximumBrightness)) If @error Then Return SetError(1, _WinAPI_GetLastErrorMessage(), False) Local Const $brightness[3] = [DllStructGetData($MinimumBrightness, 1), _ DllStructGetData($CurrentBrightness, 1), _ DllStructGetData($MaximumBrightness, 1)] Return $brightnessEndFunc ;==&gt;_GetMonitorBrightnessFunc _GetMonitorContrast(Const $h_monitor) Local Const $MinimumContrast = DllStructCreate(&quot;dword_ptr&quot;) Local Const $CurrentContrast = DllStructCreate(&quot;dword_ptr&quot;) Local Const $MaximumContrast = DllStructCreate(&quot;dword_ptr&quot;) DllCall($Dxva2, &quot;bool&quot;, &quot;GetMonitorContrast&quot;, _ &quot;handle&quot;, $h_monitor, _ &quot;ptr&quot;, DllStructGetPtr($MinimumContrast), _ &quot;ptr&quot;, DllStructGetPtr($CurrentContrast), _ &quot;ptr&quot;, DllStructGetPtr($MaximumContrast)) If @error Then Return SetError(1, _WinAPI_GetLastErrorMessage(), False) Local Const $contrast[3] = [DllStructGetData($MinimumContrast, 1), _ DllStructGetData($CurrentContrast, 1), _ DllStructGetData($MaximumContrast, 1)] Return $contrastEndFunc ;==&gt;_GetMonitorContrastFunc _SetMonitorBrightness(Const $h_monitor, Const $NewBrightness) DllCall($Dxva2, &quot;bool&quot;, &quot;SetMonitorBrightness&quot;, &quot;ptr&quot;, $h_monitor, &quot;dword&quot;, $NewBrightness) Return (@error ? SetError(1, _WinAPI_GetLastErrorMessage(), False) : True)EndFunc ;==&gt;_SetMonitorBrightnessFunc _SetMonitorContrast(Const $h_monitor, Const $contrast) DllCall($Dxva2, &quot;bool&quot;, &quot;SetMonitorContrast&quot;, &quot;ptr&quot;, $h_monitor, &quot;dword&quot;, $contrast) Return (@error ? SetError(1, _WinAPI_GetLastErrorMessage(), False) : True)EndFunc ;==&gt;_SetMonitorContrastFunc _GetPhysicalMonitorsFromHMONITOR(Const $pMonitor) Local $Number = DllStructCreate(&quot;DWORD&quot;) Local $i, $tagPhysical, $M = 1 $Ret = DllCall($Dxva2, &quot;bool&quot;, &quot;GetNumberOfPhysicalMonitorsFromHMONITOR&quot;, _ &quot;handle&quot;, $pMonitor, _ &quot;ptr&quot;, DllStructGetPtr($Number)) $NumberOfMonitors = DllStructGetData($Number, 1) For $i = 1 To $NumberOfMonitors $tagPhysical &amp;= $tagSTRUCT Next $MonitorArray = DllStructCreate($tagSTRUCT) $Ret = DllCall($Dxva2, &quot;bool&quot;, &quot;GetPhysicalMonitorsFromHMONITOR&quot;, _ &quot;handle&quot;, $pMonitor, _ &quot;DWORD&quot;, $NumberOfMonitors, _ &quot;ptr&quot;, DllStructGetPtr($MonitorArray)) Return DllStructGetData($MonitorArray, 1) ;返回第一个显示器句柄EndFunc ;==&gt;_GetPhysicalMonitorsFromHMONITORFunc CapabilitiesRequestAndCapabilitiesReply(Const $h_monitor) Local Const $tagStringLength = DllStructCreate(&quot;dword_ptr&quot;) DllCall($Dxva2, &quot;bool&quot;, &quot;GetCapabilitiesStringLength&quot;, &quot;handle&quot;, $h_monitor, &quot;ptr&quot;, DllStructGetPtr($tagStringLength)) Local Const $CapabilitiesStringLength = DllStructGetData($tagStringLength, 1) Local Const $CapabilitiesString = DllStructCreate(&quot;char[&quot; &amp; $CapabilitiesStringLength &amp; &#x27;]&#x27;) DllCall($Dxva2, &quot;bool&quot;, &quot;CapabilitiesRequestAndCapabilitiesReply&quot;, _ &quot;handle&quot;, $h_monitor, _ &quot;ptr&quot;, DllStructGetPtr($CapabilitiesString), _ &quot;dword&quot;, DllStructGetSize($CapabilitiesString)) Return (@error) ? (SetError(1, _WinAPI_GetLastErrorMessage(), False)) : (DllStructGetData($CapabilitiesString, 1))EndFunc ;==&gt;CapabilitiesRequestAndCapabilitiesReplyFunc _RestoreMonitorFactoryDefaults(Const $h_monitor) DllCall($Dxva2, &quot;bool&quot;, &quot;RestoreMonitorFactoryDefaults&quot;, &quot;ptr&quot;, $h_monitor) Return (@error) ? (SetError(1, _WinAPI_GetLastErrorMessage(), False)) : (True)EndFunc ;==&gt;_RestoreMonitorFactoryDefaultsFunc _SetVCPFeature(Const $h_monitor, Const $VCPCode, Const $NewValue) DllCall($Dxva2, &quot;bool&quot;, &quot;SetVCPFeature&quot;, _ &quot;handle&quot;, $h_monitor, _ &quot;byte&quot;, $VCPCode, _ &quot;dword&quot;, $NewValue) Return (@error) ? (SetError(1, _WinAPI_GetLastErrorMessage(), False)) : (True)EndFunc ;==&gt;_SetVCPFeatureFunc _GetVCPFeatureAndVCPFeatureReply(Const $h_monitor, Const $VCPCode) Local Const $CurrentValue = DllStructCreate(&quot;dword_ptr&quot;) Local Const $MaximumValue = DllStructCreate(&quot;dword_ptr&quot;) Local Const $VCPCodeType = DllStructCreate(&quot;dword_ptr&quot;) DllCall($Dxva2, &quot;bool&quot;, &quot;GetVCPFeatureAndVCPFeatureReply&quot;, _ &quot;handle&quot;, $h_monitor, _ &quot;byte&quot;, $VCPCode, _ &quot;ptr&quot;, DllStructGetPtr($VCPCodeType), _ &quot;ptr&quot;, DllStructGetPtr($CurrentValue), _ &quot;ptr&quot;, DllStructGetPtr($MaximumValue)) If @error Then Return SetError(1, _WinAPI_GetLastErrorMessage(), False) Local Const $VCPFeatureReply[3] = [DllStructGetData($VCPCodeType, 1), DllStructGetData($CurrentValue, 1), DllStructGetData($MaximumValue, 1)] Return $VCPFeatureReplyEndFunc ;==&gt;_GetVCPFeatureAndVCPFeatureReplyFunc Manage_vcp(Const $String) Local $Exp, $i, $tmp, $OUT_String $Exp = StringRegExp($String, &quot;(?&lt;=vcp\\()([A-Za-z0-9]&#123;2&#125;[\\)\\(]?\\s?)*(?=\\))&quot;, 2) If @error Then Return $Exp = StringRegExp($Exp[0], &quot;([0-9A-Fa-f]&#123;2&#125;)(\\(.+?\\))?&quot;, 4) If @error Then Return Local $Array[UBound($Exp)][2] For $i = 0 To UBound($Exp) - 1 $tmp = $Exp[$i] $Array[$i][0] = StringStripWS(StringLeft($tmp[0], 2), 8) $OUT_String = StringStripWS(StringTrimLeft($tmp[0], 2), 3) If $OUT_String &lt;&gt; &quot;&quot; Then $OUT_String = StringTrimLeft(StringTrimRight($OUT_String, 1), 1) $Array[$i][1] = $OUT_String EndIf Next Return $ArrayEndFunc ;==&gt;Manage_vcpFunc _DestroyPhysicalMonitor(Const $h_monitor) DllCall($Dxva2, &quot;bool&quot;, &quot;DestroyPhysicalMonitor&quot;, &quot;ptr&quot;, $h_monitor) Return (@error) ? (SetError(1, _WinAPI_GetLastErrorMessage(), False)) : (True)EndFunc ;==&gt;_DestroyPhysicalMonitorFunc Brightness_lcd(Const $BRIGHTNESS_Lcd) Local $BRIGHTNESS_String, $tmp, $i For $i = 1 To BinaryLen($BRIGHTNESS_Lcd) $tmp = Int(BinaryMid($BRIGHTNESS_Lcd, $i, 1)) If $i = 1 Then $BRIGHTNESS_String &amp;= $tmp &amp; &quot;;&quot; Else If $tmp = 0 Then ExitLoop $BRIGHTNESS_String &amp;= $tmp &amp; &quot;;&quot; EndIf Next Return StringSplit(StringTrimRight($BRIGHTNESS_String, 1), &quot;;&quot;, 2)EndFunc ;==&gt;Brightness_lcdFunc _exit() If $hDevice Then _WinAPI_CloseHandle($hDevice) _DestroyPhysicalMonitor($hMonitor) ;关闭监视器句柄 DllClose($Dxva2) ExitEndFunc ;==&gt;_exit","categories":[{"name":"源码","slug":"code","permalink":"https://goodhelp.github.io/categories/code/"}],"tags":[{"name":"autoit3","slug":"autoit3","permalink":"https://goodhelp.github.io/tags/autoit3/"},{"name":"dxva2","slug":"dxva2","permalink":"https://goodhelp.github.io/tags/dxva2/"},{"name":"显示器设置","slug":"显示器设置","permalink":"https://goodhelp.github.io/tags/%E6%98%BE%E7%A4%BA%E5%99%A8%E8%AE%BE%E7%BD%AE/"}],"author":"百脑问"},{"title":"让电源键关机变重启","slug":"soft/让电源键关机变重启","date":"2021-05-18T13:37:03.000Z","updated":"2021-09-09T14:58:16.326Z","comments":true,"path":"2021/05/18/646.html","link":"","permalink":"https://goodhelp.github.io/2021/05/18/646","excerpt":"","text":"让电源键关机变重启 使用说明 注意：需要关闭无盘的闪电关机，开启闪电关机，本软件无效！ 功能：运行本工具，按电源键，或系统中点关机，会执行重启！总之就是不关机，关机就是重启，关机直接重启，关机会重启，说三遍! 适用范围：息屏挖矿，按电源键会关机，本软件作用就显现了!机器正在挖矿，显示器黑屏，总有顾客以为机器是关了的，去按电源键开机，这时机器就会关机。顾客就会以为这台机器有问题，明明按了开关键，结果机器没开起，有些会立马换一台机器，重复上面的操作。使用了本软件，按了电源键不会关机，直接变成重启，顾客不会置疑了，呼叫网管的次数少了! 下载地址","categories":[{"name":"软件","slug":"soft","permalink":"https://goodhelp.github.io/categories/soft/"}],"tags":[{"name":"关机重启","slug":"关机重启","permalink":"https://goodhelp.github.io/tags/%E5%85%B3%E6%9C%BA%E9%87%8D%E5%90%AF/"},{"name":"电源键","slug":"电源键","permalink":"https://goodhelp.github.io/tags/%E7%94%B5%E6%BA%90%E9%94%AE/"}]},{"title":"ZIP一个没落天才的故事","slug":"other/ZIP一个没落天才的故事","date":"2018-03-27T14:59:39.000Z","updated":"2021-09-10T16:33:10.597Z","comments":true,"path":"2018/03/27/505.html","link":"","permalink":"https://goodhelp.github.io/2018/03/27/505","excerpt":"","text":"ZIP是什么？ *.ZIP，是一个文件的压缩的算法，原名Deflate（真空），发明者为菲利普·卡兹（Phil Katz)），他于1989年1月公布了该格式的资料。ZIP通常使用后缀名“.zip”，它的MIME格式为 application/zip 。目前，ZIP格式属于几种主流的压缩格式之一，其竞争者包括RAR格式以及开放源码的7-Zip格式。从性能上比较，RAR格式较ZIP格式压缩率较高，但是它的压缩时间远远高于Zip。而7-Zip(7z)由于提供了免费的压缩工具而逐渐在更多的领域得到应用。 Phil Katz不愿意为一个压缩软件付钱，就索性自己写了一个更好的算法，然后无偿公开。2000年4月14日，他被发现死于一家汽车旅馆，年仅37岁，死时手中握着一个空酒瓶。他留下了zip算法，却没有留下一张像样的照片。 久违了的zip在你的脑海里还能占据多少空间?或许，你跟本就把它忘记了。 记得刚上大学的2001年,在电脑报上看到过一篇介绍Philip Katz的文章，那时，我才知道，原来zip是曾经是那么的“不可一世”，那么广泛的被使用着。 Winzip的创始人是Philip Katz。用Ultraedit打开任一个zip文件，可以看到文件最前面PK两个字母，这便是zip文件格式的创始人Philip Katz的名字缩写。 在19年前，也就是公元1988年，那时候互联网还刚刚开始有了雏形，而最流行的是一种使用电话线拨号登陆别人在家里搭建的服务平台——交换信息的电子公告牌(BBS)系统。这种系统有些类似现在的论坛和新闻组，由于站长之间互相转信也成为了一个庞大的信息网络(惠多网)。 老一点的网虫可能都有印象，在没有 Internet的年代，中国大地上也曾有几十个这样的BBS存在，著名的字处理软件WPS的作者求伯君和CCED的作者朱崇君当年都是非常有名的个人站长。 由于电话线的接入速度慢的可怜，通过BBS传输较大文件实在是叫人痛苦的一件事。于是，使用文件压缩技术减小文件的体积并将多个文件压缩到一个封包中就成为了BBS用户的一项必须掌握的技巧。当时的美国BBS上，比较流行的是一种叫做ARC的压缩技术，由于它是一家商业公司开发的压缩技术，使用这种软件进行工作是需要付费的。那时候的菲利普·卡兹是一个沉迷于BBS 上的毛头小伙，由于经常混迹于BBS上，对于ARC的收费非常不满的他自己开发了一个程序叫PKARC，这个程序与ARC完全兼容，可以压缩和解压缩 ARC文件。这样一来，大批的ARC用户自然转而使用菲利普·卡兹的免费软件。ARC的制作公司一怒之下将菲利普·卡兹告上了法庭，法庭自然判决菲利普· 卡兹禁止继续开发和传播PKARC。这种判决并没有磨灭菲利普·卡兹的斗志，而是激起了他要与ARC斗争到底的决心。在虚拟的世界中，自由、平等永远是真正的程序员永久的追求。 他放弃了PKARC的开发，发誓要写出一款比ARC更好的压缩软件来打败ARC。这一场官司造就了一名编程天才的横空出世，也造就了一个后来在互联网时代的文件标准。几周以后，后来统治整个BBS世界乃至Internet世界的ZIP在菲利普·卡兹手中发出了第一声响亮的啼哭! 不名则已，一鸣惊人，这种名为PKZIP的程序可以将一个或多个文件压缩到一个后缀为“.zip”的文件中，无论从压缩比、压缩速度方面都超过了商业软件 ARC。卡兹将PKZIP作为自由软件免费发放，使其如同草原上的星星之火般在全美的各大BBS上蔓延开来，用户以几何级数的增长，各大BBS的站长自发将原来使用ARC格式压缩的文件转换成ZIP格式，卡兹用他天才的头脑和顽强的毅力堂堂正正的击败了ARC，ARC的制作公司在PKZIP的强大攻势下很快就消声匿迹了。用自由软件打败商业公司的传奇故事很快传遍了整个BBS世界，疾恶如仇而又身手不凡的菲利普·卡兹如同数字世界的大侠般仗剑江湖，劫富济贫，以一人之力擎起了压缩软件的大旗。 此后卡兹一直继续着对 PKZIP的开发和维护工作，PKZIP建立和统治了DOS时代的压缩标准。直到Windows的诞生，使用卡兹创造的压缩算法的软件Winzip的出现更使ZIP格式成为Internet的传输标准，ZIP压缩格式也成为压缩文档的事实标准。 PKZIP及其“克隆”作品Winzip成为Internet历史上最有名的共享软件之一，ZIP压缩格式也成为压缩文档的事实标准，建立起一个统治Internet的“ZIP王朝”。菲利普·卡兹为世界贡献了一个伟大的共享软件，而他自己却几乎没有从中获得任何好处!因为从一开始，ZIP就是为了反抗收费的PKARC“而生”的。 但是，不良的生活习惯，长期巨大的精神压力，导致了潦倒无助的他在2000年的4月14号，死在了美国威斯康星州密尔沃基的一家汽车旅馆里，死时，手里还紧握着一个烈性酒的酒瓶。 Philip Katz从未在ZIP身上得到半点好处，坚持信念的结果往往是潦倒的生活，糟糕的个人生活和长期编写软件的巨大压力使卡兹染上了酗酒的恶习，最终断送了他那年轻的生命。他为世界贡献了一个伟大的免费软件，更为重要的是他缔造了一种大众化的压缩格式，然而却过早地离开了这个世界。 就在Philip Katz去世的前后，ZIP的最大对手：WINRAR，正在悄然崛起。当时Winzip早已稳坐压缩界头把交椅，但随着2.7版本的出现，Wrar却日益壮大，两者斗争得异常激烈(注：与Winzip一样，其实早在DOS时代，就存在RAR的DOS版本，只是RAR在DOS时代敌不过只能用命令行的ARJ，到了Windows时代又招架不住WinZip的进攻，皆因RAR压缩率低和速度慢，并且RAR压缩格式以前一直缺少其它软件的支持，导致WinRAR都未能广泛流行)。 就当时两者的性能而言，Winzip压缩只支持ZIP格式，解压缩支持ZIP、CAB，还有TAR、GZip、UUencode、XXencode、BinHex、MIME等几种Internet常用格式(可以看出WinZip的重心之所在)，ARJ、LHA和ARC则需要相应的外挂程序。但WinZip跟Windows资源管理器结合得很紧密，最常用的压缩和解压缩操作已集成到鼠标右键菜单中，点按右键即可轻松完成压缩解压缩。并且增加了不少人性化的功能如E-mail功能，分卷压缩，密码加密等;那Winrar又凭什么与其争锋呢?答案是格式支持与功能!WinRAR压缩格式支持自家的RAR和ZIP(即可“兼容”ZIP)，解压缩支持RAR、ZIP、CAB、ACE、ARJ、LHA、TAR、GZip、UUE，基本上常用的都有了。WinRAR在界面上类似WinZip在功能上基本是WinZip有的它都有，甚至有好多比WinZip还更好更强大。如有特色的”Repair archive”功能甚至可以修复损坏的zip文件;”Convert archive to SFX”功能把RAR和ZIP文件转换成自解压文件，同WinZip不同的是，在压缩时就可以直接存为自解压文件…取对手之精华，并改进之，这就是Winrar敢于与压缩界龙头叫板的原因。 或许到了这里，你会问：为什么zip不去支持rar呢?这样竞争不就“公平”了吗?但我告诉你的是：zip格式是开放的，任何压缩软件都可以免费使用，RAR是RARLab的专利算法，其它软件要想提供对Rar格式支持必须交纳费用以获得授权，如果winzip想要支持zip，就必须向rarlab付费，这根本就是拿自己的血汗去喂饱对手。我们须明白：winzip和winrar都是共享软件，中国人用惯了盗版的winrar，以为rar才是压缩格式的王道，如果自以为全天下的压缩软件都应该支持rar格式，那么只能说这是一种极其荒谬的认知。 虽然ZIP仍然是压缩文件的标准格式，但随着WinRAR的功能越来越强大，并且对ZIP的兼容性和ISO镜像文件的支持，固步自封的WinZip已经逐渐开始被网民们所遗忘。面临被打倒，昔日的强者做出了最后的反击–Winzip9.0。2004年发布的Winzip9.0是Winzip公司在02年后两年内第一次发布的Winzip软件更新，可见这次Winzip反击的决心。本版本的Winzip带来了很多新的功能特性，如：加密标准提高，支持符合AES技术的128位和256位的高级加密标准;支持64位扩展技术;内置了先进的“真空”压缩算法(Enhanced Deflate)等。这一切都是针对WinRAR 3.30，誓求夺回压缩界的王座。 可惜就像乔丹的最后出场一样，也许真的是老了，我们再难看到英雄昔日的光彩。 WinZip 9.0对压缩格式的支持并没有什么增加，支持原有的18种压缩格式，但仍然不支持ISO这一非常流行的镜像文件格式，并且最大的问题是不兼容RAR，这就令许多用户敬而远之了;相对而言，WinRAR 3.30目前的压缩格式虽然只有15种，但由于兼容ZIP和支持ISO，仅仅这两条就使不少WinZip的老用户心动神移了。 随着绝唱反击的失败，于2005年7月，WinZip被Vector Capital收购。 也许在天之灵的Philip Katz并没有想到有这一天，作为下载量达到1亿4000万次，成就压缩标准zip的Winzip计算公司好象没有考虑过用其技术来赚钱的事(实际上很少有人会在WinZip试用期过后支付29美元购买正版授权，因此WinZip至今都没有获得太多利润)。它为大家提供一款如此经典的压缩软件，曾经，它是何等辉煌，但如今却威风难再。或者正如歌词所说:”想回到过去，试着让故事继续，至少不再让你离我而去…”","categories":[{"name":"其他","slug":"other","permalink":"https://goodhelp.github.io/categories/other/"}],"tags":[{"name":"人物故事","slug":"人物故事","permalink":"https://goodhelp.github.io/tags/%E4%BA%BA%E7%89%A9%E6%95%85%E4%BA%8B/"}]},{"title":"北京2008奥运会开幕式视频","slug":"other/北京2008奥运会开幕式视频","date":"2018-01-06T14:52:14.000Z","updated":"2021-09-10T16:32:52.807Z","comments":true,"path":"2018/01/06/389.html","link":"","permalink":"https://goodhelp.github.io/2018/01/06/389","excerpt":"","text":"第29届夏季奥林匹克运动会（Games of the XXIX Olympiad），又称2008年北京奥运会，2008年8月8日晚上8时整在中华人民共和国首都北京举办。2008年北京奥运会主办城市是北京，上海、天津、沈阳、秦皇岛、青岛为协办城市。香港承办马术项目。2008年北京奥运会共有参赛国家及地区204个，参赛运动员11438人，设302项（28种）运动，共有60000多名运动员、教练员和官员参加。2008年北京奥运会共创造43项新世界纪录及132项新奥运纪录，共有87个国家和地区在赛事中取得奖牌，中国以51枚金牌居金牌榜首名，是奥运历史上首个登上金牌榜首的亚洲国家。","categories":[{"name":"其他","slug":"other","permalink":"https://goodhelp.github.io/categories/other/"}],"tags":[{"name":"视频","slug":"视频","permalink":"https://goodhelp.github.io/tags/%E8%A7%86%E9%A2%91/"},{"name":"2008奥运会","slug":"2008奥运会","permalink":"https://goodhelp.github.io/tags/2008%E5%A5%A5%E8%BF%90%E4%BC%9A/"}]},{"title":"励志视频文章_你凭什么上北大?","slug":"other/励志视频文章-你凭什么上北大","date":"2018-01-06T14:48:18.000Z","updated":"2021-09-10T16:32:22.426Z","comments":true,"path":"2018/01/06/385.html","link":"","permalink":"https://goodhelp.github.io/2018/01/06/385","excerpt":"","text":"未名湖边的桃花儿开了，就在前几天。 我曾经无数次梦想过，陌生花开的时候湖边折枝的人群里会有自己的身影。那个时候，我的心思和大家一样单纯而迫切，我的目光却是比你们更加迷茫和恍惚。那年高三。 十年磨一剑，我得到的却几乎只是一块废铁。 高一那年，我真的差点就把自己废成了一块锈铁。上课的时候睡觉聊天看漫画吃零食，跟着后面那些男生大呼小叫，把年轻的女老师气得眼圈含泪，然后自鸣得意而洋洋之。那真是一段不堪回首的日子，像色彩斑斓的黑洞，看上去奇观异彩，鬼魅般的吸引力却在不知不觉中一点点把你拉向无底的深渊。于是下滑，于是堕落，而更加难过的是明明知道自己在下滑在堕落却无能力去改变。习惯的力量的确大到了让我无可奈何，于是放弃了最后的挣扎与努力。现在想想，那只是懦弱，那只是懒惰，那只是自己给自己自甘堕落所找的一个看似冠冕堂皇的理由，一切是自欺欺人。 可是当时没有任何人来指着我的鼻尖骂我，说你是不是就想这样破罐子破摔，就想这样玩完你的一辈子。也许他们已经放弃了我，有时候我想。然后是及其嘲讽般地不屑，不屑以及自以为是是洒脱——谁稀罕谁。其实，那个时候真的是应该有一个人，就像很多人曾经经历过的那样，指着我的鼻尖，戳着我的脊梁说，你知不知道自己在做什么，不清楚自己想要什么，不清楚自己的明天会是什么。 可是，再无所谓的人也会有自己的底线的，正如再深的涧谷也会有它的低谷。一切就像滑滑梯，一路上放肆张扬地笑了下来，最后终于重重地摔在了下面，头破血流。 也许，人只有在痛的时候，才会认认真真反省自己走错了哪一步吧，总要摔些跟头，才能学会绕着道走。而这条再简单不过的道理，我却付出了整整一年的青春时光才真正明白。一年，365天，可以让居里夫人发现镭，一年可以让爱因斯坦证出E=mc的平方，一年可以让一个婴儿学会跌跌撞撞地走向母亲的怀抱，一年可以让一段轰轰烈烈的爱情开始有终了。可是这一年，我只得到了那一句话。所幸，并不亏，也并不晚。 高二分科，我选了文。你无法想象我所在的中学有着怎样烂的文科班——本科上线三人是个什么概念？当我现在大学同学颇为自得地告诉我他们中学的班级北大清华一走几十个的时候，我轻轻的笑了笑。我所在的文科班，是一个本科上线三人的文科班，更具有讽刺性的是，那三个人全部是复读生。我就是在大家或无奈或讽刺或无谓的目光里，毅然决然地在文科报名表上写上了自己的名字。 那真是我一生中写得最好看的一次。 我只是突然间觉醒了，觉得自己的一辈子不能就那样过。事后很多人问我怎么回事，也许他们是想在我这里听到一个传奇般的浪子回头的故事，而我当时所能想到的解释只有这一句，我只是觉得，我的一辈子不应该就那样吊儿郎当地过去。可是我还是低估了过去的那一年给我带来的影响。第一次月考，我考了年级第12名。也许这是一个听上去差强人意的成绩，可是，仅有的良知和理智还是足以提醒我，那是一个本科上线三人的文科班。如果你不能把所有的人远远甩在后边，12名和120名有什么区别？至今我还记得那次考了第一的那个女生。是一个不见经传的女孩子，瘦瘦小小，带副厚厚的黑边眼镜，趴伏在书桌上的身影常常有些佝偻。而这个印象的得来，是因为所有的人永远只能看到她趴在桌上的身影。她一直是班里第一个来最后一个走的人。我一直对那种学生持有一种莫名的排斥与抵触情绪，总想你们有什么了不起，不就是死读书吗，我要是像你这样刻苦学习早是市里第一了。事实上直到那次考试成绩出来的时候我仍然对她不屑一顾。然后，我迎来了一生中最重要的一次班会。我不知道要用怎样的份量去感谢那个班主任，因为如果不是她的那席话，现如今的我在哪里都不一定。班会上，她说：“这次成绩非常能说明问题。应该考好的人都考好了。”然后她扫了我一眼，我明白她的潜台词也就是说在她看来我属于是没有理由考好的那一堆人里的。奇怪，我居然没有脸红。不知道是太久的堕落已经在不知不觉中磨光了原本敏感的自尊，还是下意识里仍然对她的话不置可否，我当时面无表情地迎上了她的目光。她的眼睛只是平静的扫过我那里，然后继续：“我知道有些人自以为很聪很有才气，看不起那些认真学习刻苦努力的同学，总觉得人家是笨鸟先飞是先天不足。可是我想说，你只是懦弱！你是不敢尝试，你只是不敢像她们一样地去努力去刻苦，因为你怕自己刻苦了也比不上他们，刻苦了也考不了第一，结果反遭人耻笑，你宁可不去尝试，只是因为有失败的风险，而你甚至连这一点风险都承担不起，因为，在你心底，你对知道根本就没有把握““““““”后面她又说了什么我已经想不起来了，我承认当时我是完完全全地蒙在哪儿了，因为她说的那几句话。“你只是懦弱““““`”。当时的感觉是雷轰一样把整个人震住了，反反复复回荡在脑子里就只有那么一句话：“你只是懦弱。” 她是正确的。 那种突然觉醒的震撼是语言无法描述的，也是我不想用文字去表达的。你只能通过结果来想象，也只需要通过结果来想象。那晚我在日记里写，试试吧。我不去强求什么，我只想试试，试一试自己那样刻苦那样努力地去学上一个月会不会见效。当时我根本不敢对自己承诺什么结果，也的确承诺不起。我只是抱着一个念头，试一试。然后迎来了一生中最戏剧性的一个月。之所以说它戏剧性，是因为就像难以想象唐僧不再罗嗦，孙悟空不再好斗，八戒也不再贪吃一样，我简直不敢相信那个从早晨六点早自学上课到晚上十点晚自习下课一动也不动坐在位置上安安稳稳踏踏实实的人可以是我自己。其实并没有那么简单的，真的没有说起来那么简单的。我去一点一点地做的时候就已经发现了：要想在几天里改变365天来形成的习惯，太难；而要想在一个月里创造出令人膛目结舌的奇迹来，也太难。习惯成自然啊，就像那句话说的，“心似平原放马，易放难收”，野惯了的心，要想一下子收回来，谈何容易？常常坐着坐着就忍不住了，心开始浮躁，眼神也开始飘离，好几次差一点就要放弃。只是，在那个最危险的边缘晃荡的时候我总是压一压，告诉自己，忍不住的时候，再忍一下。其实说白了也就那么一句话：忍不住的时候，再忍一下。我承认自己是一个骨子里相当傲气的人，我就是不相信我刻苦起来会不如哪个人，我就是不信我真的去做一件事情的时候会做不到，我就是不信这世上真的有什么不可能的事情。I Believe that nothing is impossible.然后，我迎来了那次期待以久的期中考试。至今我仍记得考完之后的感觉。抱着书走在回家的路上，茫然地看着车水马龙人来人往，恍惚想真的考完了吗？为什么心里空空的没有着落？那的确是我一生中最特殊的一次考试，因为它关系着我此后的方向和道路选择，风险太大，我怎么安得下心？其实，考试结果想必大家已经猜到了。我的的确确让所有的人真正膛目结舌了一次。是的，我考了第一，全市第一。 你永远也无法想象那个结果于我而言多么重要。知道成绩的时候我出乎寻常地平静。那个时候我才明白原来激扬和呐喊的冲动到了顶点只会是平静。当那个久违了的名字出现在了成绩单的第一行时，我默默地对自己说：记住了，这世上没有什么事情是不可能的。Nothing is impossble.后来我再也没有改变过那种态度和方法。其实所有的方法说白了都是没有方法的。只有一个词：刻苦。 我坚守着我的不是方法的方法，也坚守着我的名字在成绩单上的位置，一直到高考前的最后一次考试，我始终是第一名。但是，真正的挑战还没有开始。即便我可以牢牢占据第一名的位置，即便我可以每次都把第二名甩下几十分，我知道，北大离我还是太远，远得连在梦里都看得不真切。所有的老师都坚信我将会是学校里有史以来考得最好的一个文科生，而在他们的概念里，考得最好的文科生，意味着你可以上山大，运气好点儿的话也许可以伸伸手还能够上复旦甚至人大的门槛。而我只要北大。我从来没有对任何人讲起过我的志愿——如果可以称之为志愿的话。我只想把所有的力量都积蓄起来。 高三第二学期，我们搬进了刚刚落成的教学楼。搬迁的那天，楼道里吵得很，拖桌子拉板凳的声音在走廊里不绝于耳。我一个人不言不语地跳过窗子，踏上了二楼窗框外那个大大的平台。对面是操场，初雪未融，空气湿冷，光秃秃的树枝直直地刺向天空。雪天的阳光凉凉地透过睫毛洒在眼睛里，眼睛静静地看着远远的天空，我说了一句话，只说了一句话。对着远处的天空，我默默在心里说：“等着吧，我要你见证一个奇迹。”我知道，这世上的确没有什么不可能的事情。 我从来不知道压力大到一定程度时居然可以把人的潜力激发到那种地步的。我是一个极其不安分的人，可是那段时间我表现得无比耐心沉稳，踏实得象头老黄牛。事实上无数次我都面临崩溃的边缘了，高中五本历史书我翻来覆去背了整整六遍。当你把一本书也背上六遍的时候你就知道那时什么感觉了。边背边掉眼泪，真的我是差一点就背不下去了就要把书扔掉了。只是，忍不住的时候，再忍一下。坚持的确是世界上最伟大的一种品质。那段时间我唯一的休息方式就是站在走廊里看远处的天空。后来发现在对面的建筑墙壁上有一行大大的红字，是学校用来激励学生的吧，我不确定。可就是那句话陪我走过了高三最后的日子——意志的力量，是决定成败的力量。我用我所有的经历和体会去实践而且证明了这句话：意志的力量，是决定成败的力量。 呼啸而至的风卷着漫天的黄沙，在那个北方的春天里，我们一个个头发蓬乱，皮肤粗糙。死寂与喧嚣交替如同美国的执政党，规律得让人怀疑冥冥之中可有双奇异而魔力无穷的手。惶然而又茫然的我们在敬畏与期待中迎来又送走了一模、二模以至N模，每根神经都被冷酷无情的现实锤炼得坚不可摧，不论是吟惯了杨柳岸晓风残月的诗情，还是习惯了信手涂鸦的画意。在这个来去匆匆的季节里，一切敏感纤细都奢侈得如同恺撒大帝的稠衣，徒留无数次的希望在无数次的失望前撞得粉身碎骨，无数次的激扬在无数次的颓丧下摔得头破血流。每个人都比昨天更加明白理想和现实之间那道不可逾越的鸿沟，同时也比昨天更加拼命努力挣扎，试图挤过那道窄窄的独木桥，哪怕明知是徒劳。——-会是徒劳么？当这个锥心的问号在夜阑人静的时候一次次猛烈扣击起了心门，每个人都难以承受那潮涌而至的恐慌和迷惘，于是逼着自己埋进去，埋进书本，埋进试卷，埋进密不透风的黑茧——为的只是有朝一日的破茧成蝶。青黑的眼圈，浮肿的眼带，干燥的手指，焦虑得起了水泡的嘴角。那个春天我不知道流行的是粉蓝果绿还是黛紫银灰。小镜子被悄悄收起，因为不忍见到自己憔悴的面容和黯淡的眼睛，因为怕有什么会在汪洋恣意般在干旱已久的脸上纵横开来——上帝，我是个女孩子啊。 上帝无言。无言微笑。微笑告诉我，你，心甘情愿。是的。我心甘情愿我不悔初衷我自己选择了这条路平坦也好崎岖也罢我得走下去。我要走下去。我会走下去。 于是所有的呐喊被咽下去，于是所有的豪情被收起来。我象一头二月黄牛，默默踏步，无声前行。当拼搏被拼命所取代时，香格里拉已经幻化为心中恒远而朦胧的梦想，而所有的努力也只是为了让这梦想不再“美人如花隔去端”，哪怕青冥长天，纵然绿水波澜。 踏入考场的时候后我很平静。“尽吾志也而不能至者，可以无悔矣。”事实上我从来没有想过自己会考入北大以外的哪所学校。与其说这是一种自信，莫如说这是一种预感。我只是想，哪怕北大只招一个名额，为什么不可能是我？这世上没有什么事情是真正不可能发生的。 考完后走在回家的路上，看着依然匆匆的人群，心里依然空无着落。眼睛因为泪雾而模糊，视野里的东西却越发清晰。这在科学上有解释，我却宁愿相信是因为一切真实的感知都要以泪水和苦痛作为代价。是的，我们总是要学会放弃一些东西，才能得到另外一些东西。如果你所在乎的东西值得你为它而付出一切，那么所有的放弃都只是分娩前的阵痛。总要有所取舍的，蝴蝶的生命之所以如此短暂，因为它的翅膀太过精致了。有时候，放弃只是为了真正的得到，关键看你想要的究竟是什么，以及为了这想要的的东西你愿意付出多大的代价。上帝对每一个人都是平等的。 事实上我怀念那段日子，并且永远感激它。不只是因为在那段时间里我完成了自己的过渡与蜕变，更是因为那时的一切深深烙在了我正处于可塑期的性格中，成为这一生永远的财富。那真的是多少钱都买不来的财富。人生中再也不会有哪个时期像那时一样专一地，单纯地，坚决地，几近固执而又饱含信仰和希冀地，心无旁贷乃至与世隔绝地，为了一个认定的目标而奋斗。当你在若干年后某个悠闲的下午，回想起自己曾经的努力和放弃，曾经的坚忍和耐力，曾经的执著和付出，曾经的汗水和泪水，那会是怎样一种感动和庆幸，怎样一种欣慰和尊敬——尊敬你自己。是的，在这个过程中，请允许我重复一遍，最重要的，是你自己。我感谢父母感谢老师感谢同学感谢朋友感谢所有关心我帮助我的人，但我最感谢的，是我自己。Nothing is impossible.这是我在一点一滴的努力与尝试中获得到的东西。而且我也相信，这也将会是使我终生受益的东西。在这里，我把自己最信仰的一句话送给大家： Nothing is impossible.","categories":[{"name":"其他","slug":"other","permalink":"https://goodhelp.github.io/categories/other/"}],"tags":[{"name":"视频","slug":"视频","permalink":"https://goodhelp.github.io/tags/%E8%A7%86%E9%A2%91/"},{"name":"励志视频","slug":"励志视频","permalink":"https://goodhelp.github.io/tags/%E5%8A%B1%E5%BF%97%E8%A7%86%E9%A2%91/"}]},{"title":"BBC拍的中国春节，中国新年视频","slug":"other/BBC拍的中国春节，中国新年视频","date":"2018-01-04T14:11:13.000Z","updated":"2021-09-10T16:33:36.183Z","comments":true,"path":"2018/01/04/374.html","link":"","permalink":"https://goodhelp.github.io/2018/01/04/374","excerpt":"","text":"《中国春节》是英国广播公司（BBC）2015年12月拍摄的三集纪录片，用镜头聚焦“亿万中国人同时迁徙的壮观。在开篇，三位主持人开门见山地为网友介绍了中国的农历新年。可能买不到票，可能坐上没有座位的火车，可能要在人堆里挤上三天三夜，但这都不能阻止中国人回家过年的愿望。 1.《中国新年》第一集《回家》主要讲述了在中国传统文化和家庭观念的影响下，中国人通过火车、飞机、摩托车不同方式回家过年的故事，介绍了中国为保障春节期间人们顺利出行所做的准备，同时对中国哈尔滨冰雪节、蔚县打树花等春节文化进行了展示。主持人还特意到云南白马雪山探寻金丝猴的保护情况，介绍中国12属相文化。 2.《中国新年》第二集《团圆》主要介绍中国家庭春节期间的传统风俗习惯，包括包饺子、贴春联、看春晚、放烟花、摆鲜花以及祈福等，通过照全家福等生动的故事体现了中国人家庭的团圆和温暖，而在蔬菜批发市场的采购过程又体现了现代中国生活的富足。 3.《中国新年》第三集《欢庆》从中国最南端的香港到最北端的查干湖，从北京的庙会到香港维多利亚港的焰火，体现了遍布中国大江南北的欢乐祥和气氛，介绍了中国的饮食文化和舞龙舞狮等民俗文化。特别是本集里客观地介绍了香港1997年回归和一国两制的理念，并把香港本土文化作为中国文化的一部分展示给海外观众。","categories":[{"name":"其他","slug":"other","permalink":"https://goodhelp.github.io/categories/other/"}],"tags":[{"name":"中国春节","slug":"中国春节","permalink":"https://goodhelp.github.io/tags/%E4%B8%AD%E5%9B%BD%E6%98%A5%E8%8A%82/"},{"name":"新年视频","slug":"新年视频","permalink":"https://goodhelp.github.io/tags/%E6%96%B0%E5%B9%B4%E8%A7%86%E9%A2%91/"},{"name":"视频","slug":"视频","permalink":"https://goodhelp.github.io/tags/%E8%A7%86%E9%A2%91/"}]},{"title":"Your world within在你的世界激励视频","slug":"other/yourworldwithin在你的世界激励视频","date":"2018-01-04T14:11:13.000Z","updated":"2021-09-10T16:33:20.661Z","comments":true,"path":"2018/01/04/378.html","link":"","permalink":"https://goodhelp.github.io/2018/01/04/378","excerpt":"","text":"其实很多时候，我们并非跟任何人博弈，我们只要努力的战胜自己，所以才会觉得疲惫。战胜别人，需要的是不断的斗志和勇气；而战胜自己，需要的确实坚守的意志和决心。没有梦想的人，是可怕的；就好像一个人没有信仰。我要赚好多好多钱，可是好多好多又是多少？是一百万，一千万还是一个亿？我要好好谈一场恋爱，可是好好谈一场恋爱的标准又是什么？是愿得一心人，白首不相离；是即使曾经沧海难为水，却依旧七月七日长生殿，还是众里寻他千百度，那人却在灯火阑珊处？ 您的浏览器不支持HTML5的 video 标签，无法为您播放！","categories":[{"name":"其他","slug":"other","permalink":"https://goodhelp.github.io/categories/other/"}],"tags":[{"name":"视频","slug":"视频","permalink":"https://goodhelp.github.io/tags/%E8%A7%86%E9%A2%91/"},{"name":"励志视频","slug":"励志视频","permalink":"https://goodhelp.github.io/tags/%E5%8A%B1%E5%BF%97%E8%A7%86%E9%A2%91/"}]},{"title":"time小青龙伴奏MP3下载","slug":"other/time小青龙伴奏MP3下载","date":"2018-01-01T14:05:59.000Z","updated":"2021-09-10T16:33:27.814Z","comments":true,"path":"2018/01/01/370.html","link":"","permalink":"https://goodhelp.github.io/2018/01/01/370","excerpt":"","text":"中国有嘻哈选手歌曲time 小青龙VS辉子time原唱小青龙和辉子，虽然两位老铁淘汰了，但是这首歌还是很感人!小青龙 辉子 time 高品质伴奏下载，纯净，无干扰，纯音乐伴奏，无人声!下载地址 链接：https://pan.baidu.com/s/1pLMIF8Z 密码：g1w2 附上time的歌词当我没日没夜工作从长水起飞 时间反复催促让我忘了疲惫 那心酸的滋味我只能独自体会 想要回到过去但是时光不能倒退 校门口美味的路边摊还在不在 包里塞的小吃那是外婆给的爱 那年生日同桌攒钱给我买的卡带 包装粗糙海报写着JAY 那些年做过的课间操 课桌上面摆着老师送的铅笔刀 她教我如何起跑 我闭上双眼祈祷 我知道努力学习以后才能把歌写好 于是日复一日 年复一年 那个美丽的春天早已变成我的纪念 我渐渐长大成人 眼看着世界沉沦 就算我是个战神可我心也一样会疼 再没骗自己的理由 时间如刀不再温柔 一路走 汗在流 再回首 已没有 那双扶着我不跌倒的手 走尽春夏秋冬 天南地北 母亲已经白头 我也 不再 年幼 我发现我早已经长大 我发现我早不说谎话 特别的怀念 回到童年 可我只能把握现在 带着回不去的从前 街边的落日 和小时候的复读机 度过了末日 但我要比以前有出息 小霸王游戏机 陪我度过了一段时期 经典的就像是old school flow 从不用质疑 改变不了过去 那我为了现在出征 我不会为了Hip-hop死 但为了Hip-hop出生 所以我努力的跑 把一切全部看透 我想让我爱的人过的更好 所以才去战斗 脱掉了曾经 认为很时尚的大肥裤子 到现在 我依旧做说唱还在饿着肚子 回忆是每个人的财富 一定记住他 不用问我的来路 贫民窟的艺术家 再没骗自己的理由 时间如刀不再温柔 一路走 汗在流 再回首 已没有 那双扶着我不跌倒的手 走尽春夏秋冬 天南地北 母亲已经白头 我也 不再 年幼","categories":[{"name":"其他","slug":"other","permalink":"https://goodhelp.github.io/categories/other/"}],"tags":[{"name":"time小青龙伴奏","slug":"time小青龙伴奏","permalink":"https://goodhelp.github.io/tags/time%E5%B0%8F%E9%9D%92%E9%BE%99%E4%BC%B4%E5%A5%8F/"},{"name":"音乐","slug":"音乐","permalink":"https://goodhelp.github.io/tags/%E9%9F%B3%E4%B9%90/"}]},{"title":"不要小看自己的力量励志视频","slug":"other/不要小看自己的力量励志视频","date":"2017-12-29T13:48:19.000Z","updated":"2021-09-10T16:32:44.090Z","comments":true,"path":"2017/12/29/364.html","link":"","permalink":"https://goodhelp.github.io/2017/12/29/364","excerpt":"","text":"不要小看自己的力量励志视频你可以改变世界。你每天都可以用善行和爱来充满你的生活。你也许不能消除世界饥饿，但你可以捐献50磅食品，从而让一个家庭免遭饥饿一个月。你也许不能给世界带来和平，但你可以把你的和平精神带给你周围的世界。你也许不能驱走所有人心中的仇恨和黑暗，但你可以把你内心中的爱和光拿出来与人共享。 您的浏览器不支持HTML5的 video 标签，无法为您播放！","categories":[{"name":"其他","slug":"other","permalink":"https://goodhelp.github.io/categories/other/"}],"tags":[{"name":"视频","slug":"视频","permalink":"https://goodhelp.github.io/tags/%E8%A7%86%E9%A2%91/"},{"name":"励志视频","slug":"励志视频","permalink":"https://goodhelp.github.io/tags/%E5%8A%B1%E5%BF%97%E8%A7%86%E9%A2%91/"}]},{"title":"delphi中dcef如何自定义referer信息？","slug":"article/delphi中dcef如何自定义referer信息？","date":"2017-12-25T16:19:24.000Z","updated":"2021-09-10T16:20:34.026Z","comments":true,"path":"2017/12/26/346.html","link":"","permalink":"https://goodhelp.github.io/2017/12/26/346","excerpt":"","text":"TChromium自定义referer，在早期的dcef版本中，这样Append(‘Referer’,’http://www.bnwin.com’)就可以了，详细看下面代码，如果append不行，启用这句request.SetReferrer(request.url, REFERRER_POLICY_ALWAYS); 123456789101112131415161718192021procedure TMainForm.chrm1BeforeResourceLoad(Sender: TObject; const browser: ICefBrowser; const frame: ICefFrame; const request: ICefRequest; const callback: ICefRequestCallback; out Result: TCefReturnValue);var map: ICefStringMultimap; sAccept,sUserAgent:string;begin sAccept:= &#x27;application/x-shockwave-flash, image/gif, image/jpeg, image/pjpeg, application/x-ms-application, application/x-ms-xbap,&#x27;+ &#x27; application/vnd.ms-xpsdocument, application/xaml+xml,text/html,application/octet-stream, */*&#x27;; sUserAgent:=&#x27;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36 QIHU 360EE&#x27;; map := TCefStringMultimapOwn.Create; request.GetHeaderMap(map); map.Append(&#x27;Referer&#x27;,request.url); map.Append(&#x27;Accept&#x27;,sAccept); map.Append(&#x27;User-Agent&#x27;,sUserAgent); // ShowMessage(map.getvalue(1)+&#x27; &#x27;+map.getkey(1)); request.SetHeaderMap(map); //map:=nil; //request.SetReferrer(request.url, REFERRER_POLICY_ALWAYS);end; 在高版本的dcef中自定义referer，可以直接定义request. 12345678910111213141516171819procedure TMainForm.ShowUrl(hurl,AllUrl:string);var Request: ICefRequest; Data: ICefPostData; Header: ICefStringMultimap; sUserAgent:string;begin if chrm1.Browser.IsLoading then chrm1.Browser.StopLoad; sUserAgent:=&#x27;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36 QIHU 360EE&#x27;; Request := TCefRequestRef.New; Request.SetReferrer(hurl,REFERRER_POLICY_ORIGIN);//定义referer Data := TCefPostDataRef.New; Header := TCefStringMultimapOwn.Create; Header.Append(&#x27;Accept-Language&#x27;, &#x27;zh-CN&#x27;); Header.Append(&#x27;User-Agent&#x27;,sUserAgent); Request.Assign(AllUrl,&#x27;POST&#x27;,Data,header); chrm1.Browser.MainFrame.LoadRequest(Request);end;","categories":[{"name":"文章","slug":"article","permalink":"https://goodhelp.github.io/categories/article/"}],"tags":[{"name":"delphi","slug":"delphi","permalink":"https://goodhelp.github.io/tags/delphi/"},{"name":"dcef3","slug":"dcef3","permalink":"https://goodhelp.github.io/tags/dcef3/"}]},{"title":"delphi中如何让dcef支持flash插件播放视频？","slug":"article/delphi中如何让dcef支持flash插件播放视频？","date":"2017-12-24T16:16:03.000Z","updated":"2021-09-10T16:20:50.065Z","comments":true,"path":"2017/12/25/344.html","link":"","permalink":"https://goodhelp.github.io/2017/12/25/344","excerpt":"","text":"Chromium Embedded Framework (CEF)是个基于Google Chromium项目的开源Web browser控件，支持Windows, Linux, Mac平台。除了提供C/C++接口外，也有其他语言的移植版。因为基于Chromium，所以CEF支持Webkit &amp; Chrome中实现的HTML5的特性，并且在性能上面，也比较接近Chrome。CEF还提供的如下特性：自定义插件、自定义协议、自定义JavaScript对象和扩展；可控制的resource loading, navigation, context menus等等。dcef是指的cef在delphi中的版本 cef在前期版本中是自带支持flash插件的,后来Chromium不再默认支持flash控件!下面看看我的程序的dcef命令行参数 如何让dcef支持flash呢？ 安装好dcef，不管哪个版本都行! 安装360极速浏览器或QQ浏览器，打开其安装目录，找到ppflash目录和npflash目录(360极速浏览器是这两个目录，而QQ浏览器略有不同)！ 在你的工程目录中建NativeFlash目录和PepperFlash目录,然后360的npflash目录下的NPSWF开头的dll文件和同目录下的vch文件复制到自己工程的NativeFlash中，把360的ppflash目录中的pepflash开头的dll文件和同目录下的json文件复制到工程的PepperFlash目录中!这一步就是用360浏览器的flash文件，不需要你手工去下载安装插件!至少你应该发现即使你的系统没有安装flash插件，但360浏览器安装后一样可以正常播放flash，这就是因为他的目录中自带了这几个flash文件，为了让你的程序的dcef支持flash，所以我们直接复制360极速浏览器的flash文件过来，简单方便! 编辑你的delphi工程文件（即dpr文件），在{$R *.res}后面添加如下代码123456789101112131415161718192021procedure AppendCefCmdline(const processType: ustring; const cmd: ICefCommandLine);begin //cmd.AppendSwitch(&#x27;--enable-gpu-plugin&#x27;);//允许gpu //cmd.AppendSwitch(&#x27;disable-gpu&#x27;);//禁止gpu cmd.AppendSwitch(&#x27;enable-npapi&#x27;); //允许NativeFlash //cmd.AppendSwitch(&#x27;enable-tab-audio-muting&#x27;);//允许tab页禁音 //cmd.AppendSwitch(&#x27;--enable-media-stream&#x27;); //允许视频流 cmd.AppendSwitchwithvalue(&#x27;load-plugin&#x27;, &#x27;NativeFlash\\NPSWF32.dll&#x27;);//指定NativeFlash插件文件位置，注意文件名要和你的一致 //cmd.AppendSwitchWithValue(&#x27;ppapi-flash-version&#x27;,&#x27;20.0.0.267&#x27;);//指定PepperFlash版本号 cmd.AppendSwitchWithValue(&#x27;ppapi-flash-path&#x27;,&#x27;PepperFlash\\pepflashplayer.dll&#x27;);//指定PepperFlash插件文件位置,注意文件名要和你的一致 cmd.AppendSwitch(&#x27;--enable-system-flash&#x27;);//允许PepperFlash //cmd.AppendSwitch(&#x27;--enable-usermedia-screen-capturing&#x27;);end; begin CefOnBeforeCommandLineProcessing :=AppendCefCmdline; //这一句就是指定了dcef启动的命令行 Application.Initialize; Application.MainFormOnTaskbar := True; Application.CreateForm(TMainForm, MainForm); Application.Run;end. 很多人用delphi的dcef写的程序，不支持flash，是只在命令行中添加了允许flash，而没有指定flash插件文件的位置，这时dcef会去调用系统安装的flash插件，一旦系统插件有问题，你的程序就无法播放flash了，本文写的方法就是360极速浏览器的方法，不管你的系统安装不安装flash，一样播放flash!而要让dcefbrowser支持flash也一样，dcefbrowser中只是把CefOnBeforeCommandLineProcessing改为DcefBApp.OnBeforeCommandLineProcessing即可，至于播放flash会有dos窗口弹一下的问题，请看本站的这篇文章http://www.bnwin.com/2017/12/01/328.html","categories":[{"name":"文章","slug":"article","permalink":"https://goodhelp.github.io/categories/article/"}],"tags":[{"name":"delphi","slug":"delphi","permalink":"https://goodhelp.github.io/tags/delphi/"},{"name":"dcef3","slug":"dcef3","permalink":"https://goodhelp.github.io/tags/dcef3/"}]},{"title":"delphi如何实现任意窗口透明化?","slug":"article/delphi如何实现任意窗口透明化","date":"2017-12-16T16:13:47.000Z","updated":"2021-09-10T16:14:51.837Z","comments":true,"path":"2017/12/17/334.html","link":"","permalink":"https://goodhelp.github.io/2017/12/17/334","excerpt":"","text":"1234567//声明:SetLayeredWindowAttributes( Hwnd: THandle; &#123;窗口句柄&#125; crKey: COLORREF; &#123;透明色&#125; bAlpha: Byte; &#123;Alpha 值&#125; dwFlags: DWORD &#123;LWA_COLORKEY(=1)表示使用透明色; LWA_ALPHA(=2)表示使用 Alpha 值&#125;): Boolean; &#123;是否成功设置&#125; 举例(控制外部程序的透明度, 用计算器举了个例子): 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748unit Unit1; interface uses Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms, Dialogs, StdCtrls; type TForm1 = class(TForm) Button1: TButton; Button2: TButton; procedure Button1Click(Sender: TObject); procedure Button2Click(Sender: TObject); end; var Form1: TForm1; implementation &#123;$R *.dfm&#125; &#123;设定计算器的 Alpha 透明&#125;procedure TForm1.Button1Click(Sender: TObject);var h: HWND; FormStyle: Integer;begin h := FindWindow(&#x27;CalcFrame&#x27;,&#x27;计算器&#x27;); FormStyle := GetWindowLong(h, GWL_EXSTYLE); SetWindowLong(h, GWL_EXSTYLE, FormStyle or WS_EX_LAYERED); SetLayeredWindowAttributes(h, 0, 128, LWA_ALPHA);end; &#123;设定计算器中的白色透明&#125;procedure TForm1.Button2Click(Sender: TObject);var h: HWND; FormStyle: Integer;begin h := FindWindow(&#x27;SciCalc&#x27;, nil); FormStyle := GetWindowLong(h, GWL_EXSTYLE); SetWindowLong(h, GWL_EXSTYLE, FormStyle or WS_EX_LAYERED); SetLayeredWindowAttributes(h, clWhite, 255, LWA_COLORKEY);end; end.","categories":[{"name":"文章","slug":"article","permalink":"https://goodhelp.github.io/categories/article/"}],"tags":[{"name":"delphi","slug":"delphi","permalink":"https://goodhelp.github.io/tags/delphi/"}]},{"title":"dcef3加载flash闪烁问题简单解决方法","slug":"article/dcef3加载flash闪烁问题简单解决方法","date":"2017-11-30T16:08:51.000Z","updated":"2021-09-10T16:12:21.722Z","comments":true,"path":"2017/12/01/328.html","link":"","permalink":"https://goodhelp.github.io/2017/12/01/328","excerpt":"","text":"dcef3添加flash插件后，在播放flash时会有一个dos的黑框一闪而过,显示not sandboxed,影响使用体验! 一种方法是hook 具体可以看这篇文章 http://blog.csdn.net/zx2356/article/details/51514403这篇文章是使用的C语言，这儿采用同样的方法，在delphi中实现!代码如下HookExt.pas源码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100unit HookExt; interfaceuses uhook,Windows,SysUtils; type TFuncCreateProcessA = function(lpApplicationName: LPCSTR; lpCommandLine: LPSTR; lpProcessAttributes, lpThreadAttributes: PSecurityAttributes; bInheritHandles: BOOL; dwCreationFlags: DWORD; lpEnvironment: Pointer; lpCurrentDirectory: LPCSTR; const lpStartupInfo: TStartupInfoA; var lpProcessInformation: TProcessInformation): BOOL; stdcall; TFuncCreateProcessW = function(lpApplicationName: LPCWSTR; lpCommandLine: LPWSTR; lpProcessAttributes, lpThreadAttributes: PSecurityAttributes; bInheritHandles: BOOL; dwCreationFlags: DWORD; lpEnvironment: Pointer; lpCurrentDirectory: LPCWSTR; const lpStartupInfo: TStartupInfoW; var lpProcessInformation: TProcessInformation): BOOL; stdcall; implementation var hhk: HHook; MapFile: THandle; startPID: PDWORD; Hook: array [0 .. 1] of TNtHookClass; function NewCreateProcessA(lpApplicationName: LPCSTR; lpCommandLine: LPSTR; lpProcessAttributes, lpThreadAttributes: PSecurityAttributes; bInheritHandles: BOOL; dwCreationFlags: DWORD; lpEnvironment: Pointer; lpCurrentDirectory: LPCSTR; const lpStartupInfo: TStartupInfoA; var lpProcessInformation: TProcessInformation): BOOL; stdcall;var strCommandLine: AnsiString;begin strCommandLine := StrPas(lpCommandLine); if (Pos(&#x27;echo NOT SANDBOXED&#x27;,strCommandLine)&gt;0) or (Pos(&#x27;no-sandbox&#x27;,strCommandLine)&gt;0) then Result := True else begin Hook[0].UnHook; Result := TFuncCreateProcessA(Hook[0].BaseAddr)(lpApplicationName, lpCommandLine, lpProcessAttributes, lpThreadAttributes, bInheritHandles, dwCreationFlags, lpEnvironment, lpCurrentDirectory, lpStartupInfo, lpProcessInformation); Hook[0].Hook; end;end; function NewCreateProcessW(lpApplicationName: LPCWSTR; lpCommandLine: LPWSTR; lpProcessAttributes, lpThreadAttributes: PSecurityAttributes; bInheritHandles: BOOL; dwCreationFlags: DWORD; lpEnvironment: Pointer; lpCurrentDirectory: LPCWSTR; const lpStartupInfo: TStartupInfoW; var lpProcessInformation: TProcessInformation): BOOL; stdcall;var strCommandLine: string;begin strCommandLine := StrPas(lpCommandLine); if (Pos(&#x27;echo NOT SANDBOXED&#x27;,strCommandLine)&gt;0) or (Pos(&#x27;no-sandbox&#x27;,strCommandLine)&gt;0) then Result := True else begin Hook[1].UnHook; Result := TFuncCreateProcessW(Hook[1].BaseAddr)(lpApplicationName, lpCommandLine, lpProcessAttributes, lpThreadAttributes, bInheritHandles, dwCreationFlags, lpEnvironment, lpCurrentDirectory, lpStartupInfo, lpProcessInformation); Hook[1].Hook; end;end; // 安装API Hookprocedure InitHook;begin Hook[0] := TNtHookClass.Create(&#x27;kernel32.dll&#x27;, &#x27;CreateProcessA&#x27;, @NewCreateProcessA); Hook[1] := TNtHookClass.Create(&#x27;kernel32.dll&#x27;, &#x27;CreateProcessW&#x27;, @NewCreateProcessW); // Hook[2] := TNtHookClass.Create( &#x27;user32.dll&#x27;, &#x27;MessageBoxA&#x27;, @NewMessageBoxA );end; // 删除API Hookprocedure UnInitHook;var i: Integer;begin for i := 0 to High(Hook) do FreeAndNil(Hook[i]);end; // 环境处理procedure DllEntry(dwReason: DWORD);begin case dwReason of DLL_PROCESS_ATTACH: InitHook; DLL_PROCESS_DETACH: UnInitHook; end;end; initialization InitHook; finalization UnInitHook;end. 其中的uHook.pas源码:12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788unit uHook; interface usesWindows, Messages, SysUtils;type TNtJmpCode = packed record MovEax: Byte; Addr: DWORD; JmpCode: Word; dwReserved: Byte; end; TNtHookClass = class(TObject) private hProcess: THandle; NewAddr: TNtJmpCode; OldAddr: array [0 .. 7] of Byte; ReadOk: Boolean; public BaseAddr: Pointer; constructor Create(const ADllName, AFuncName: string; ANewFunc: Pointer); destructor Destroy; override; procedure Hook; procedure UnHook; end; implementation &#123; TNtHookClass &#125; constructor TNtHookClass.Create(const ADllName, AFuncName: string; ANewFunc: Pointer);var dllModule: HMODULE; lpNumberOfBytesReacd: DWORD; //NativeUInt; i:Integer;begin // 获取模块句柄 dllModule := GetModuleHandle(PWideChar(ADllName)); if dllModule = 0 then dllModule := LoadLibrary(PWideChar(ADllName)); // 得到模块入口地址 BaseAddr := Pointer(GetProcAddress(dllModule, PWideChar(AFuncName))); // 获取当前进程句柄 hProcess := GetCurrentProcess; // 指向新地址的指针 NewAddr.MovEax := $B8; NewAddr.Addr := DWORD(ANewFunc); NewAddr.JmpCode := $E0FF; // 保存原始地址 ReadOk:=ReadProcessMemory(hProcess, BaseAddr, Pointer(@OldAddr), 8, lpNumberOfBytesReacd); // 开始拦截 Hook; end; destructor TNtHookClass.Destroy;begin UnHook; CloseHandle(hProcess); inherited;end; procedure TNtHookClass.Hook;var lpNumberOfBytesRead: DWORD;begin if not ReadOk then exit; // 写入新的地址 WriteProcessMemory(hProcess, BaseAddr, @NewAddr, 8, lpNumberOfBytesRead);end; procedure TNtHookClass.UnHook;var lpNumberOfBytesRead: DWORD;begin if not ReadOk then exit; // 恢复地址 WriteProcessMemory(hProcess, BaseAddr, @OldAddr, 8, lpNumberOfBytesRead); end; end. 这种hook处理不好就容易蓝屏，更简单的方法如下：用二进制编辑软件，比如winhex,我这儿采用UltraEdit,用UltraEdit打开flash插件dll文件 pepflashplayer.dll 搜索comspec修改为somspec,(修改的名字只要和comspec不相同即可)修改cmd.exe为cm1.exe (修改的名字只要和cmd.exe不相同即可) 修改后为 然后保存即可，这时打开flash就不会有dos黑框闪一下了！ 第三种方法，更简单，什么都不用修改，只要在你的程序目录下新建一个文本文件，然后改名为cmd.exe，因为弹出黑框需要使用cmd程序，而系统搜索程序是从进程当前的工作目录开始查找，所以直接这样建一个不能执行的cmd.exe文件可以拦截cmd的调用。这个方法最简单！ 第一种hook方法是修改flash文件，但其实是采用动态方法改了汇编代码，处理不好容易蓝屏。第二种方法修改flash插件文件,原理是：flash执行cmd的逻辑是，先读取环境变量comspec(cmd.exe的全路径)，读取到就执行它，读取不到就不执行cmd.exe.只要把变量和cmd.exe名字修改，就执行不成功，就没有DOS黑框出来!第一种方法是在flash插件要运行cmd.exe的时候再进行拦截，是动态修改的，而第二种是直接让flash找不到变量和cmd.exe程序，flash自己判断不用执行，是静态修改!第三种是懒人方法!但几种方法实现的效果都是阻止cmd.exe的正常执行!同时你就可以这样思考了，为了让flash不出现闪黑框的问题，就变成了如何阻止cmd.exe的执行，比如你在你自己的程序中先修改一下comspec环境变量，也是可以阻止cmd.exe执行的，大家自由发挥!","categories":[{"name":"文章","slug":"article","permalink":"https://goodhelp.github.io/categories/article/"}],"tags":[{"name":"delphi","slug":"delphi","permalink":"https://goodhelp.github.io/tags/delphi/"},{"name":"dcef3","slug":"dcef3","permalink":"https://goodhelp.github.io/tags/dcef3/"}]},{"title":"如何自定义修改TChromium的header头信息!","slug":"article/如何自定义修改TChromium的header头信息","date":"2017-11-29T16:05:35.000Z","updated":"2021-09-10T16:21:04.534Z","comments":true,"path":"2017/11/30/327.html","link":"","permalink":"https://goodhelp.github.io/2017/11/30/327","excerpt":"","text":"TChromium自定义post的header信息提交数据1234567891011121314151617181920212223242526272829uses ceflib; function CreateField(const AValue: AnsiString): ICefPostDataElement;begin Result := TCefPostDataElementRef.New; Result.SetToBytes(Length(AValue), PAnsiChar(AValue));end; procedure TForm1.Button1Click(Sender: TObject);var Header: ICefStringMultimap; Data: ICefPostData; Request: ICefRequest;begin Header := TCefStringMultimapOwn.Create; Header.Append(&#x27;Content-Type&#x27;, &#x27;application/x-www-form-urlencoded&#x27;); Data := TCefPostDataRef.New; Data.AddElement(CreateField(&#x27;Data.id=27&#x27;)); Data.AddElement(CreateField(&#x27;&amp;Data.title=title&#x27;)); Data.AddElement(CreateField(&#x27;&amp;Data.body=body&#x27;)); Request := TCefRequestRef.New; Request.Flags := WUR_FLAG_NONE; Request.Assign(&#x27;http://example.com/&#x27;, &#x27;POST&#x27;, Data, Header); Chromium1.Browser.MainFrame.LoadRequest(Request);end; 在另一版本中的代码1234567891011121314151617181920212223procedure TForm1.Button1Click(Sender: TObject);var Header: ICefStringMultimap; Data: ICefPostData; Request: ICefRequest;begin Request := TCefRequestRef.New; Request.Url := &#x27;http://example.com/&#x27;; Request.Method := &#x27;POST&#x27;; Request.Flags := WUR_FLAG_NONE; Header := TCefStringMultimapOwn.Create; Header.Append(&#x27;Content-Type&#x27;, &#x27;application/x-www-form-urlencoded&#x27;); Request.SetHeaderMap(Header); Data := TCefPostDataRef.New; Data.AddElement(CreateField(&#x27;Data.id=27&#x27;)); Data.AddElement(CreateField(&#x27;&amp;Data.title=title&#x27;)); Data.AddElement(CreateField(&#x27;&amp;Data.body=body&#x27;)); Request.PostData := Data; Chromium1.Browser.MainFrame.LoadRequest(Request);end; TChromium自定义post数据123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051function CreateField(const AValue: AnsiString): ICefPostDataElement;begin Result := TCefPostDataElementRef.New; Result.SetToBytes(Length(AValue), PAnsiChar(AValue));end; //***************************************** procedure POST(total, fee: integer);var Header: ICefStringMultimap; Data: ICefPostData; Request: ICefRequest; Cook: ICefCookieManager;begin Request := TCefRequestRef.New; Request.Url := &#x27;&#x27;; Request.Method := &#x27;POST&#x27;; Request.Flags:=[UR_FLAG_ALLOW_CACHED_CREDENTIALS,UR_FLAG_ALLOW_COOKIES]; Header := TCefStringMultimapOwn.Create; Header.Append(&#x27;Host&#x27;, &#x27;&#x27;); Header.Append(&#x27;User-Agent&#x27;, &#x27;&#x27;); Header.Append(&#x27;Accept&#x27;, &#x27;&#x27;); Header.Append(&#x27;Accept-Language&#x27;, &#x27;&#x27;); Header.Append(&#x27;Accept-Encoding&#x27;, &#x27;&#x27;); Header.Append(&#x27;Content-Type&#x27;, &#x27;&#x27;); Header.Append(&#x27;Referer&#x27;, &#x27;&#x27;); Header.Append(&#x27;Content-Length&#x27;, &#x27;&#x27;); Header.Append(&#x27;Origin&#x27;, &#x27;&#x27;); Header.Append(&#x27;Connection&#x27;, &#x27;&#x27;); Header.Append(&#x27;Pragma&#x27;, &#x27;&#x27;); Header.Append(&#x27;Cache-Control&#x27;, &#x27;&#x27;); Header.Append(&#x27;Cookie&#x27;,&#x27;...&#x27;); ... Header.Append(&#x27;Cookie&#x27;,&#x27;...&#x27;); Request.SetHeaderMap(Header); Data := TCefPostDataRef.New; Data.AddElement(CreateField(&#x27;sessionid=&#x27;+SessionID)); Data.AddElement(CreateField(&#x27;¤cy=5&#x27;)); Data.AddElement(CreateField(&#x27;&amp;subtotal=&#x27;+inttostr(total-fee))); Data.AddElement(CreateField(&#x27;&amp;fee=&#x27;+IntToStr(fee))); Data.AddElement(CreateField(&#x27;&amp;total=&#x27;+IntToStr(total))); Request.PostData := Data; form1.Chromium1.Browser.MainFrame.LoadRequest(Request);end;","categories":[{"name":"文章","slug":"article","permalink":"https://goodhelp.github.io/categories/article/"}],"tags":[{"name":"delphi","slug":"delphi","permalink":"https://goodhelp.github.io/tags/delphi/"},{"name":"dcef3","slug":"dcef3","permalink":"https://goodhelp.github.io/tags/dcef3/"}]},{"title":"如何让dcef3支持mp3和h.264_mp4解码播放(有源码及dll)!","slug":"article/如何让dcef3支持mp3和h-264-mp4解码播放-有源码及dll","date":"2017-11-28T16:00:23.000Z","updated":"2021-09-10T16:06:12.389Z","comments":true,"path":"2017/11/29/323.html","link":"","permalink":"https://goodhelp.github.io/2017/11/29/323","excerpt":"","text":"嵌入式Chromium框架(简称CEF) 是一个由Marshall Greenblatt在2008建立的开源项目，它主要目的是开发一个基于Google Chromium的Webbrowser控件。CEF支持一系列的编程语言和操作系统，并且能很容易地整合到新的或已有的工程中去。它的设计思想政治就是易用且兼顾性能。CEF基本的框架包含C/C++程序接口，通过本地库的接口来实现，而这个库则会隔离宿主程序和Chromium&amp;Webkit的操作细节。它在浏览器控件和宿主程序之间提供紧密的整合，它支持用户插件，协议，javascript对象以及javascript扩展，宿主程序可以随意地控件资源下载，导航，下下文内容和打印等，并且可以跟Google Chrome浏览器一起，支持高性能和Html5 技术 为什么chromium不支持mp3和h.264的mp4音视频解码，因为h.264编码并非开源，是需要付费的!所以就存在谷歌自己的浏览器chrome能支持mp4和tchromium不支持mp4!如何查看你的tchromium是否支持mp4呢？你用tchromium写一个简单浏览器，然后打开http://html5test.com 支持是这样显示的 而不支持是这样显示的 也就是支持h.264 support mp3 support和aac support应该是钩! 要让cef支持mp3和mp4，需要自己编译，如果你对自己如何编辑有兴趣可以看这篇文件 在Windows下编译Cef3.2623并加入mp3、mp4支持 对于delphi用户，如何让在delphi中dcef3支持mp3和mp4呢？先到这儿下载dcef3 3.2623.1401 http://download.csdn.net/download/cyu/9917747 (如果没有积分就到这儿下载 链接：https://pan.baidu.com/s/1dFETI0L 密码：gult ) 你也可以安装dcefbrowser，封装后的dcef3 这儿下载dcefbrowser3.2623.1401 https://github.com/bccsafe/DcefBrowser (你也可以到这儿下载dcefbrowser 链接：https://pan.baidu.com/s/1dFB5Zv7 密码：fljs )不管你是下载的dcef3 3.2623.1401 还是下载的dcefbrowser 3.2623.1401都可以，安装控件后，运行示例程序，这时你的dcef是不支持mp3和mp4的，为什么呢？因为h.264等编码问题，作者打包的dll库文件是默认不支持mp3和mp4的! 如何让delphi中dcef3支持mp3和mp4呢？你只需要到这儿下载 链接：https://pan.baidu.com/s/1c1DZ1DY 密码：sqir 已经编译好支持mp3和mp4的dll库，覆盖到前面安装的控件中，就OK了，因为这个dll库是对应于dcef3.2623.1401，所以dcef必须也要安装3.26.23.1401。如何让delphi中dcef3支持mp3和mp4呢?因为非开源问题，所以自己编译dcef3的dll库的不多，提供下载的也不多，为了让你的dcef3支持mp3和mp4，我们只要找对应的版本就可以使用了!为什么非要指定dcef3为3.2623.1401，这是因为编译cef的dll需要开启mp3和mp4支持，网上提供其他版本的cef的dll库，并且加入了支持mp3和mp4的没有，如果你会C++，会自己编译cef的库，那什么版本都一样，都可以支持mp3和mp4 附dcef3另一版本及库文件：dcef3.2454 下载http://download.csdn.net/download/bigcoolfish/9616325 相对应已添加支持mp3和mp4的 dcef3.2454 dll库文件下载 https://pan.baidu.com/s/1pKHbeY3 密码: mxr2","categories":[{"name":"文章","slug":"article","permalink":"https://goodhelp.github.io/categories/article/"}],"tags":[{"name":"delphi","slug":"delphi","permalink":"https://goodhelp.github.io/tags/delphi/"},{"name":"dcef3","slug":"dcef3","permalink":"https://goodhelp.github.io/tags/dcef3/"}]},{"title":"如何查出桌面的弹出窗口是谁创建的?","slug":"article/如何查出桌面的弹出窗口是谁创建的","date":"2017-11-26T15:49:29.000Z","updated":"2021-09-10T15:58:30.760Z","comments":true,"path":"2017/11/26/317.html","link":"","permalink":"https://goodhelp.github.io/2017/11/26/317","excerpt":"","text":"做为PC系统，很大一部份是使用的windows，windows的广告软件很多，不小心就会在桌面上弹出一个窗口，凭肉眼，用任务管理器，很难看出是哪个程序创建的弹出窗口，本文件介绍用句柄精灵ViewWizard找出桌面弹出窗口是什么程序创建的!来看看桌面出现的这个弹出窗口在开机运行QQ后不久就在桌面右下角弹出这个窗口，任务栏没有任何程序出现！ 打开 句柄精灵ViewWizard (下载句柄精灵请到 http://www.bnwin.com/2017/11/03/202.html) 界面如下 鼠标按住 句柄精灵的 十字图标拖到这个弹出的窗口上！ 这时句柄精灵就显示出来这个程序的所有信息 这个窗口的模块是 C:\\Users\\Administrator\\AppData\\Local\\Temp\\QXREPAIR1.DLL 往下面拉，看看进程是谁 exe执行文件在 C:\\Users\\Administrator\\AppData\\Local\\Temp\\PZYTOOLS\\XFIXER.exe 是由谁创建的呢？父进程是 916 [svchost.exe] 找到了是谁创建的，是什么进程，就可以相应的进行控制了!你可以禁止XFIXER.exe的运行，或者禁止svchost.exe在temp目录创建xfixer.exe文件等！ 你也可以根据句柄精灵提供的窗口信息进行自动关闭!对于这种有独立进程的弹出窗口你可能通过任务管理器也能查找到，虽然没有使用句柄精灵方便，但通过其他程序加载dll库文件弹出的窗口，通过任务管理器就无能为力了! 我们来看看英雄联盟选择英雄时左边的窗口是谁创建的 打开句柄精灵，拖动十字图标到这个窗口上，看看句柄精灵中的信息 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121属性 数据基本&gt;句柄 67140 [0x00010644]文本长度 0类名 TWINCONTROL基类 Generic描述 通用窗口ID *数据 0x130B9478字节 *实例 *模块 I:\\游戏辅助\\TGP腾讯游戏平台网吧版\\apps\\Pallas\\pallas.exe父窗&gt;句柄 [65552]文本 [Desktop]类名 [#32769]基类 [Generic]显示&gt;状态 常规&gt;可视 yes有效 yes置顶 yes分层 no透明 no重叠 no不活动 noUnicode yes密码框 no掩码不透明度 *Z序 3大小&gt;窗口矩形 (1508,415)-(1810,798) 302×383还原矩形 (1508,415)-(1810,798) 302×383客户矩形(屏幕) (1508,415)-(1810,798) 302×383客户矩形(窗口) (0,0)-(302,383) 302×383最大化坐标 (0,0) 1920×1050最小最大尺寸 0x0 1930×1057当前窗口坐标当前客户坐标关系&gt;父窗口 65552 [0x00010010] #32769 “Desktop”根窗口 *所有者窗口 *首个子窗口 *首兄弟窗口 394540 [0x0006052C] MSCTFIME UI “MSCTFIME UI”上一个窗口 918714 [0x000E04BA] IME “Default IME”下一个窗口 198612 [0x000307D4] Auto-Suggest Dropdown “”尾兄弟窗口 65812 [0x00010114] Progman “Program Manager”样式&gt;标准样式 0x96020000 (2516713472)描述 WS_POPUP|WS_VISIBLE|WS_CLIPSIBLINGS|WS_CLIPCHILDREN|WS_GROUP控件扩展样式 0x00000088 (136)描述 WS_EX_TOPMOST|WS_EX_TOOLWINDOW控件类&gt;类名 TWINCONTROL类原子 0xC2CC (49868)类字节 *窗口字节 *类样式 0x00000008 (8)描述 CS_DBLCLKS图标 *小图标 *光标 0x00010003 IDC_ARROW画刷 *菜单 *过程 0x55C1AD90 (1438756240) [Unicode]模块 0x00400000 (4194304)模块路径 I:\\游戏辅助\\TGP腾讯游戏平台网吧版\\apps\\Pallas\\pallas.exe菜单&gt;句柄 *子菜单所有子菜单菜单项菜单矩形字体&gt;句柄 *名称大小粗体斜体删除线下划线字符集进程&gt;进程ID 7060 [0x00001B94]线程ID 2560 [0x00000A00]进程启动 2017-11-26 16:32:06线程启动 2017-11-26 16:32:06内存使用 32,248 KB内存峰值 91,252 KB虚拟内存 82,008 KB线程计数 17句柄计数 324GUI对象 GDI:52, User:40映像名称 pallas.exeEXE路径 I:\\游戏辅助\\TGP腾讯游戏平台网吧版\\apps\\Pallas\\pallas.exe物理路径 I:\\游戏辅助\\TGP腾讯游戏平台网吧版\\apps\\Pallas\\pallas.exe命令行父进程 6444 [tgp_daemon.exe]文件&gt;名称 pallas.exe大小 7390408版本 4.1.1.123版权 Copyright (C) 2015 Tencent.All Rights Reserved产品 WeGame公司 腾讯计算机系统有限公司描述 Tencent.WeGame.Pallas创建时间 2015-12-31 21:14:44统计&gt;子窗口所有子窗口无效子窗口隐藏子窗口线程窗口 12进程窗口 12附加&gt;基本类型 Generic (通用) 正确使用句柄精灵，可以找出广告程序等弹出窗口的幕后黑手！","categories":[{"name":"文章","slug":"article","permalink":"https://goodhelp.github.io/categories/article/"}],"tags":[{"name":"去广告","slug":"去广告","permalink":"https://goodhelp.github.io/tags/%E5%8E%BB%E5%B9%BF%E5%91%8A/"}]},{"title":"TChromium获取网页源代码delphi代码","slug":"article/TChromium获取网页源代码delphi代码","date":"2017-11-19T15:45:32.000Z","updated":"2021-09-10T15:47:47.396Z","comments":true,"path":"2017/11/19/301.html","link":"","permalink":"https://goodhelp.github.io/2017/11/19/301","excerpt":"","text":"使用Webbrowser取得网页源代码网上已经有很多例子了，而TChromium如何获得网页源代码呢？ 第一种方法1234567891011procedure TCustomLoad.OnLoadEnd(const browser: ICefBrowser;const frame: ICefFrame; httpStatusCode: Integer);vardata:tstringlist;begindata:=tstringlist.create;if frame.IsMain thendata.text:=frame.Source; // HTML Sourceend;data.free;end; 在dcef3中123456789101112procedure StringVisitor(const str: ustring);begin//str is the SourceHtmlshowmessage(str);end;function GetSourceHTML: string;varCefStringVisitor:ICefStringVisitor;beginCefStringVisitor := TCefFastStringVisitor.Create(StringVisitor);Chromium1.Browser.MainFrame.GetSource(CefStringVisitor);end; 第三种1Chromium1.Browser.MainFrame.ViewSource;","categories":[{"name":"文章","slug":"article","permalink":"https://goodhelp.github.io/categories/article/"}],"tags":[{"name":"delphi","slug":"delphi","permalink":"https://goodhelp.github.io/tags/delphi/"}]},{"title":"富有哲理的座右铭100条","slug":"other/富有哲理的座右铭100条","date":"2017-11-08T15:42:48.000Z","updated":"2021-09-10T16:32:29.206Z","comments":true,"path":"2017/11/08/253.html","link":"","permalink":"https://goodhelp.github.io/2017/11/08/253","excerpt":"","text":"1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495969798991001011021031041051061071081091101111121131141151161171181191201211221231241251261271281291301311321331341351361371381391401411421431441451461471481491501511521531541551561571581591601611621631641651661671681691701711721731741751761771781791801811821831841851861871881891901911921931941951961971981992002012022032042052062072082092102112122132142152162172182192202212222232242252262272282292302312322332342352362372382392402412422432442452462472482492502512522532542552562572582592602612622632642652662672682692702712722732742752762772782792802812822832842852862872882892902912922932942952962972982993003013023033043053063073083093103113123133143153163173183193203213223233243253263273283293303313323333343353363373383393403413423433443453463473483493503513523533543553563573583593603613623633643653663673683693703713723733743753763773783793803813823833843853863873883893903913923933943953963973983994004014024034044054064074084094104114124134144154164174184194204214224234244254264274284294304314324334344354364374384394404414424434444454464474484494504514524534544554564574584594604614624634644651、人之所以有一张嘴，而有两只耳朵，原因是听的要比说的多一倍。2、哲人无忧，智者常乐。并不是因为所爱的一切他都拥有了，而是所拥有的一切他都爱。3、泪水和汗水的化学成分相似，但前者只能为你换来同情，后者却可以为你赢的成功。4、越是成熟的稻穗，越懂得弯腰。5、江海之所以能成为百谷之王，是因为懂得身处低下。6、每个人都有潜在的能量，只是很容易被习惯所掩盖，被时间所迷离，被惰性所消磨。 7、生气是拿别人做错的事来惩罚自己。 8、后悔是一种耗费精神的情绪。后悔是比损失更大的损失，比错误更大的错误，所以请不要后悔。 9、人生有几件绝对不能失去的东西：自制的力量，冷静的头脑，希望和信心。 10、不是境况造就人，而是人造就境况。 11、自己要先看得起自己，别人才会看得起你。 12、要铭记在心：每天都是一年中最美好的日子。 13、爱的力量大到可以使人忘记一切，却又小到连一粒嫉妒的沙石也不能容纳。 14、人是可以快乐地生活的，只是我们自己选择了复杂，选择了叹息！ 15、过去的一页，能不翻就不翻，翻落了灰尘会迷了双眼。 16、人若软弱就是自己最大的敌人；人若勇敢就是自己最好的朋友。 17、要纠正别人之前，先反省自己有没有犯错。 18、许多人缺少的不是美，而是自信的气质，记住：自信本身就是一种美。有了积极的心态就容易成功。 19、人总是珍惜未得到的，而遗忘了所拥有的。 20、用最少的悔恨面对过去。用最少的浪费面对现在。用最多的梦面对未来。 21、大多数人想要改造这个世界，但却罕有人想改造自己。 22、得意时应善待他人，因为你失意时会需要他们。 23、一千个人就有一千种生存方式和生活道路，要想改变一些事情，首先得把自己给找回来。 24、任何的限制，都是从自己的内心开始的。忘掉失败，不过要牢记失败中的教训。 25、假如我不能，我一定要；假如我一定要，我就一定能。 26、一个能从别人的观念来看事情，能了解别人心灵活动的人，永远不必为自己的前途担心。 27、人生不过三万天，成功失败均坦然，是非恩怨莫在意，健康快乐最值钱。 28、世界上有两种人：索取者和给予者。前者也许能吃得更好，但后者绝对能睡得更香。 29、环境不会改变，解决之道在于改变自己。 30、要让事情改变，先改变我自己；要让事情变得更好，先让自己变得更好。 31、不要对挫折叹气，姑且把这一切看成是在你成大事之前，必须经受的准备工作。 32、你出生的时候，你哭着，周围的人笑着；在生命的尽头，你笑着，而周围的人在哭着。 33、伟人之所以伟大，是因为他与别人共处逆境时，别人失去了信心，他却下决心实现自己的目标。 34、如果早上醒来，你发现自己还能自由呼吸，你就比在这一周离开人世的100万人更有福气。 35、什么时候也不要放弃希望，越是险恶的环境越要燃起希望的意志。 36、积极的人在每一次忧患中都看到一个机会，而消极的人则在每个机会都看到某种忧患。 37、许多人企求着生活的完美结局，殊不知美根本不在结局，而在于追求的过程。 38、也许有些人很可恶，有些人很卑鄙。而当我设身为他想象的时候，我才知道：他比我还可怜。所以请原谅所有你见过的人，好人或者坏人。 39、一句无心的话也许会点燃纠纷，一句残酷的话也许会毁掉生命，一句及时的话也许会消释紧张，一句知心的话也许会愈合伤口、挽救他人。 40、生命就是一个逐渐支出和利用时间的过程。一旦丧失了时间，生命也就走到了尽头。 41、世上并没有用来鼓励工作努力的赏赐，所有的赏赐都只是被用来奖励工作成果的。 42、生命的完整，在于宽恕、容忍、等待与爱，如果没有这一切，你拥有了所有，也是虚无。 43、当我们眺望远方的时候，近处的风景便看不清了。 44、如果你希望成功，以恒心为良友，以经验为参谋，以小心为兄弟，以希望为哨兵。 45、思考是一件最辛苦的工作，这可能是为什么很少人愿意思考的原因。 46、成功呈概率分布，关键是你能不能坚持到成功开始呈现的那一刻。 47、自己打败自己是最可悲的失败，自己战胜自己是最可贵的胜利。 48、为别人鼓掌的人也是在给自己的生命加油。 49、拥有梦想只是一种智力，实现梦想才是一种能力。 50、如果一个人不知道他要驶向哪个码头，那么任何风都不会是顺风。 51、人的才华就如海绵的水，没有外力的挤压，它是绝对流不出来的。流出来后，海绵才能吸收新的源泉。 52、感恩生命，感谢她给予我们一个聪明的大脑。思考疑难的问题，生命的意义；赞颂真善美，批判假恶丑。记住精彩的瞬间，激动的时刻，温馨的情景，甜蜜的镜头。感恩生命赋予我们特有的灵性。 53、善待自己，幸福无比，善待别人，快乐无比，善待生命，健康无比。 54、一切伟大的行动和思想，都有一个微不足道的开始。 55、在你发怒的时候，要紧闭你的嘴，免得增加你的怒气。 56、获致幸福的不二法门是珍视你所拥有的、遗忘你所没有的。 57、骄傲是胜利下的蛋，孵出来的却是失败。 58、没有一个朋友比得上健康，没有一个敌人比得上病魔，与其为病痛暗自流泪，不如运动健身为生命添彩。 59、有什么别有病，没什么别没钱，缺什么也别缺健康，健康不是一切，但是没有健康就没有一切。 60、什么都可以不好，心情不能不好；什么都可以缺乏，自信不能缺乏；什么都可以不要，快乐不能不要；什么都可以忘掉，健身不能忘掉。 61、选对事业可以成就一生，选对朋友可以智能一生，选对环境可以快乐一生，选对伴侣可以幸福一生，选对生活方式可以健康一生。 62、含泪播种的人一定能含笑收获。 63、一个有信念者所开发出的力量，大于个只有兴趣者。 64、忍耐力较诸脑力，尤胜一筹。 65、影响我们人生的绝不仅仅是环境，其实是心态在控制个人的行动和思想。同时，心态也决定了一个人的视野、事业和成就，甚至一生。 66、每一发奋努力的背后，必有加倍的赏赐。 67、懒惰像生锈一样，比操劳更消耗身体。 68、所有的胜利，与征服自己的胜利比起来，都是微不足道。所有的失败，与失去自己的失败比起来，更是微不足道。 69、挫折其实就是迈向成功所应缴的学费。 70、在这个尘世上，虽然有不少寒冷，不少黑暗，但只要人与人之间多些信任，多些关爱，那么，就会增加许多阳光。 71、一个能从别人的观念来看事情，能了解别人心灵活动的人，永远不必为自己的前途担心。 72、当一个人先从自己的内心开始奋斗，他就是个有价值的人。 73、没有人富有得可以不要别人的帮助，也没有人穷得不能在某方面给他人帮助。 74、凡真心尝试助人者，没有不帮到自己的。 75、积极者相信只有推动自己才能推动世界，只要推动自己就能推动世界。 76、一个人最大的破产是绝望，最大的资产是希望。 77、行动是成功的阶梯，行动越多，登得越高。 78、环境永远不会十全十美，消极的人受环境控制，积极的人却控制环境。 79、当所有人都低调的时候，你可以高调，但不能跑调。 80、成功的法则极为简单，但简单并不代表容易。 81、肯低头的人，永远不会撞到矮门。 82、昨晚多几分钟的准备，今天少几小时的麻烦。 83、拿望远镜看别人，拿放大镜看自己。 84、一念放下，万般自在。 85、六个不能：不能饿了才吃，不能渴了才喝，不能困了才睡，不能累了才歇，不能病了才检查，不能老了再后悔。 86、屋子修得再大也是临时住所，只有那个小木匣才是永久的家，所以，屋宽不如心宽，身安不如心安！ 87、人生最大的错误，是用健康换取身外之物，人生最大的悲哀，是用生命换取个人的烦恼，人生最大的浪费，是用生命解决自己制造的麻烦！ 88、人生最大的哀痛，是子欲孝而亲不在！人生最大的悲剧，是家未富而人先亡，人生最大的可怜，是弥留之际才明白自己是应该做什么的！ 89、当心灵趋于平静时，精神便是永恒！把欲望降到最低点，把理性升华到最高点，你会感受到：平安是福，清心是禄，寡欲是寿！ 90、最好的医生是自己，最好的药物是时间，最好的心情是宁静，最好的保健是笑脸，最好的运动是步行！ 91、欢乐是长寿的妙药，勤奋是健康的灵丹，运动是健康的投资，长寿是健身的回报，相逢莫问留春术，淡薄宁静比药好！ 92、金钱难买健康，健康大于金钱，金钱难买幸福，幸福必有健康，生命的幸福不在名利在健康，身体的强壮不在金钱在运动！ 93、饮食贵在节，读书贵在精，锻炼贵在恒，节饮食养胃，多读书养胆，喜运动延生！ 94、你不能左右天气，但可以改变心情。你不能改变容貌，但可以掌握自己。你不能预见明天，但可以珍惜今天！ 95、热爱生活的人，生活也爱他。 96、微笑不用本钱，但能创造财富。赞美不用花钱，但能产生气力。分享不用过度，但能倍增快乐。 97、快乐总和宽厚的人相伴，财富总与诚信的人相伴，聪明总与高尚的人相伴，魅力总与幽默的人相伴，健康总与豁达的人相伴。 98、愚者用肉体监视心灵，智者用心灵监视肉体。 99、生活若剥去了理想、梦想、幻想，那生命便只是一堆空架子。 100、尝试去把别人拍过来的砖砌成结实的地基，生活就不会那么辛苦了。","categories":[{"name":"其他","slug":"other","permalink":"https://goodhelp.github.io/categories/other/"}],"tags":[{"name":"文章","slug":"文章","permalink":"https://goodhelp.github.io/tags/%E6%96%87%E7%AB%A0/"},{"name":"座右铭","slug":"座右铭","permalink":"https://goodhelp.github.io/tags/%E5%BA%A7%E5%8F%B3%E9%93%AD/"}]},{"title":"仓央嘉措最美情诗十首","slug":"other/仓央嘉措最美情诗十首","date":"2017-11-08T15:38:33.000Z","updated":"2021-09-10T16:32:36.533Z","comments":true,"path":"2017/11/08/250.html","link":"","permalink":"https://goodhelp.github.io/2017/11/08/250","excerpt":"","text":"仓央嘉措（1683—1706年），为第六世达赖喇嘛，门巴族人，西藏历史上著名的人物。1683年（藏历水猪年，康熙二十二年）生于西藏南部，门隅纳拉山下宇松地区乌坚林村的一户农奴家庭，父亲扎西丹增，母亲次旺拉姆。家中世代信奉宁玛派佛教。1697年被当时的西藏摄政王第巴·桑结嘉措认定为五世达赖的转世灵童，同年在桑结嘉措的主持下在布达拉宫举行了坐床典礼。1705年被废，1706年在押解途中圆寂。仓央嘉措是一位才华出众、富有文采的民歌诗人，写了很多细腻真挚的情歌。最为经典的拉萨藏文木刻版《仓央嘉措情歌》，词句优美，朴实生动，汇集了仓央嘉措60多首情诗，如今已被译成20多种文字，几乎传遍了全世界，他的诗歌已经超越民族、时空、国界，成为宝贵的文化遗产。其中最著名的是“曾虑多情损梵行，入山又恐别倾城。世间安得双全法，不负如来不负卿。”一、 谁，执我之手，敛我半世癫狂;谁，吻我之眸，遮我半世流离;谁，抚我之面，慰我半世哀伤;谁，携我之心，融我半世冰霜;谁，扶我之肩，驱我一世沉寂。谁，唤我之心，掩我一生凌轹。谁，弃我而去，留我一世独殇;谁，可明我意，使我此生无憾;谁，可助我臂，纵横万载无双;谁，可倾我心，寸土恰似虚弥;谁，可葬吾怆，笑天地虚妄，吾心狂。伊，覆我之唇，祛我前世流离;伊，揽我之怀，除我前世轻浮。执子之手，陪你痴狂千生;深吻子眸，伴你万世轮回。执子之手，共你一世风霜;吻子之眸，赠你一世深情。我， 牵尔玉手， 收你此生所有;我， 抚尔秀颈， 挡你此生风雨。予，挽子青丝，挽子一世情思;予，执子之手，共赴一世情长;曾，以父之名，免你一生哀愁;曾，怜子之情，祝你一生平安!二、《那一世》那一刻，我升起风马，不为乞福，只为守候你的到来;那一日，我闭目在经殿香雾中，蓦然听见你颂经中的真言;那一夜，我听了一宿梵唱，不为参悟，只为寻你的一丝气息;那一月，我摇动所有的经筒，不为超度，只为触摸你的指尖;那一年，我磕长头在山路，不为觐见，只为贴着你的温暖;那一世，转山转水转佛塔啊，不为修来生，只为途中与你相见。那一瞬，我飞升成仙，不为长生，只为佑你平安喜乐。三、《十诫诗 》第一最好不相见，如此便可不相恋。第二最好不相知，如此便可不相思。第三最好不相伴，如此便可不相欠。第四最好不相惜，如此便可不相忆。第五最好不相爱，如此便可不相弃。第六最好不相对，如此便可不相会。第七最好不相误，如此便可不相负。第八最好不相许，如此便可不相续。第九最好不相依，如此便可不相偎。第十最好不相遇，如此便可不相聚。但曾相见便相知，相见何如不见时。安得与君相诀绝，免教生死作相思。四、《见与不见》你见，或者不见我我就在那里不悲不喜你念，或者不念我情就在那里不来不去你爱，或者不爱我爱就在那里不增不减你跟，或者不跟我我的手就在你手里不舍不弃来我的怀里或者让我住进你的心里默然 相爱寂静 欢喜五、住进布达拉宫，我是雪域最大的王。流浪在拉萨街头，我是世间最美的情郎。与玛吉阿米的更传神，自恐多情损梵行，入山又怕误倾城。世间安得双全法，不负如来不负卿。六、我终于明白，世间有一种思绪，无法用言语形容，粗犷而忧伤。回声的千结百绕，而守候的是，执着。一如月光下的高原，一抹淡淡痴痴的笑。笑那浮华落尽，月色如洗;笑那悄然而逝，飞花万盏。谁是那轻轻颤动的百合，在你的清辉下亘古不变。谁有那灼灼热烈的双眸，在你的颔首中攀援而上。遥远的忧伤，穿过千山万水。纵使高原上的风，吹不散，执着的背影。纵使清晨前的霜，融不化，心头的温热。你静守在月下，悄悄地来。七、《问佛》我问佛：为何不给所有女子羞花闭月容颜?佛曰：那只是昙花一现，用来蒙蔽世俗的眼，没有什麽美可以抵过一颗纯净仁爱的心，我把它赐给每一个女子，可有人让她蒙上了灰。我问佛：世间为何有那麽多遗憾?佛曰：这是一个婆娑世界，婆娑既遗憾，没有遗憾，给你再多幸福也不会体会快乐。我问佛：如何让人们的心不再感到孤单?佛曰：每一颗心生来就是孤单而残缺的，多数带著这种残缺度过一生，只因与能使它圆满的另一半相遇时，不是疏忽错过就是已失去拥有它的资格。我问佛：如果遇到了可以爱的人，却又怕不能把握怎麽办?佛曰：留人间多少爱，迎浮世千重变;和有情人，做快乐事，别问是劫是缘。我问佛：如何才能如你般睿智?佛曰：佛是过来人，人是未来佛，我也曾如你般天真。我问佛：为什么总是在我悲伤的时候下雪?佛说：冬天就要过去，留点记忆。我问佛：为什么每次下雪都是我不在意的夜晚?佛说：不经意的时候人们总会错过很多真正的美丽。我问佛：那过几天还下不下雪?佛说：不要只盯着这个季节，错过了今冬。八、我用世间所有的路，倒退，从哪儿来回哪儿去。正如月亮回到湖心，野鹤奔向闲云，我步入你，然后一场大雪便封住所有人的嘴。那个女子，满身都是洗不尽的春色，眸子闪处，花花草草;笑口开时，山山水水;但那块发光的松石，却折射着她一生的因缘，她坐在自己深处避邪，起来后再把那些误解她的人白白错过。一挥手，六尘境界到处都是她撒出的花种。夕阳印证着雪山无我的智慧，爱情与梵心同样白得耀眼，离别后，晚风依然珍藏着她的誓言。誓言中的青草早已枯黄，没有什么远近之分，世上最远的也远不过隔世之爱，再近也近不过自己与自己相邻，此时，远处隐隐传来琵琶声，那是她弹的，却不是为我弹的。","categories":[{"name":"其他","slug":"other","permalink":"https://goodhelp.github.io/categories/other/"}],"tags":[{"name":"情诗","slug":"情诗","permalink":"https://goodhelp.github.io/tags/%E6%83%85%E8%AF%97/"},{"name":"文章","slug":"文章","permalink":"https://goodhelp.github.io/tags/%E6%96%87%E7%AB%A0/"}]},{"title":"英语名言警句","slug":"other/英语名言警句","date":"2017-11-07T15:35:30.000Z","updated":"2021-09-10T16:33:51.639Z","comments":true,"path":"2017/11/07/244.html","link":"","permalink":"https://goodhelp.github.io/2017/11/07/244","excerpt":"","text":"中文中的一些名言，英语中你知道怎么说吗？记住下面这些英语名言，用在你的考试作文中，会被加分哟！ 第一部份: 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495969798991001011021031041051061071081091101111121131141151161171181191201211221231241251261271281、Do one thing at a time, and do well.一次只做一件事，做到最好！ 2、Never forget to say “thanks”.永远不要忘了说“谢谢”! 3、Keep on going never give up.勇往直前， 决不放弃！ 4、Whatever is worth doing is worth doing well.任何值得做的事就值得把它做好！ 5、Believe in yourself.相信你自己！ 6、I can because i think i can.我行，因为我相信我行！ 7、Action speak louder than words.行动胜于言语！ 8、Never say die.永不气馁！ 9、Never put off what you can do today until tomorrow.今日事今日毕！ 10、The best preparation for tomorrow is doing your best today.对明天做好的准备就是今天做到最好！ 11、You cannot improve your past, but you can improve your future. Once time is wasted, life is wasted.你不能改变你的过去，但你可以让你的未来变得更美好。一旦时间浪费了，生命就浪费了。 12、Knowlegde can change your fate and English can accomplish your future.知识改变命运，英语成就未来。 13、Don&#x27;t aim for success if you want it; just do what you love and believe in, and it will come naturally.如果你想要成功，不要去追求成功；尽管做你自己热爱的事情并且相信它，成功自然到来。 14、Jack of all trades and master of none.门门精通，样样稀松。 15、Judge not from appearances.人不可貌相，海不可斗量。 16、Justice has long arms.天网恢恢，疏而不漏。 17、Keep good men company and you shall be of the number.近朱者赤，近墨者黑。 18、Kill two birds with one stone.一箭双雕。 19、Kings go mad, and the people suffer for it.君王发狂，百姓遭殃。 20、Kings have long arms.普天之下，莫非王土。 21、Knowledge is power.知识就是力量。 21、Knowledge makes humble, ignorance makes proud.博学使人谦逊，无知使人骄傲。 22、Learn and live.活着，为了学习。 23、Learning makes a good man better and ill man worse.好人越学越好，坏人越学越坏。 24、Learn not and know not.不学无术。 25、Learn to walk before you run.先学走，再学跑。 26、Let bygones be bygones.过去的就让它过去吧。 27、Let sleeping dogs lie.别惹麻烦。 28、Let the cat out of the bag.泄漏天机。 29、Lies can never changes fact.谎言终究是谎言。 30、Lies have short legs.谎言站不长。 31、Life is but a span.人生苦短。 32、Life is half spent before we know what it is.人过半生，方知天命。 33、Life is not all roses.人生并不是康庄大道。 34、Life without a friend is death.没有朋友，虽生犹死。 35、Like a rat in a hole.瓮中之鳖。 36、Like author, like book.文如其人。 37、Like father, like son.有其父必有其子。 38、Like for like.一报还一报。 39、Like knows like.惺惺相惜。 40、Like mother, like daughter.有其母必有其女。 41、Like teacher, like pupil.什么样的老师教什么样的学生。 42、Like tree, like fruit.羊毛出在羊身上。 第二部份 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879801、You can never turn back the clock时光不能倒流2、All things come to those who wait懂得忍耐的人是最大的赢家3、Desire has no rest人的欲望无止尽4、Some people never adjust to the loss of a loved one有些人永远无法从失去挚爱的人的悲痛中走出来5、Time is of the essence时间就是一切6、Danger past，God forgotten飞鸟尽，良弓藏7、A young idler，an old beggar少壮不努力，老大徒伤悲8、Man proposes，God disposes谋事在人，成事在天9、Merry meet，merry part好聚好散10、Courtesy costs nothing礼多人不怪11、Every little bit helps滴水穿石12、Nothing is difficult if you put your heart into it世上无难事，只怕有心人13、You may delay，but time until not时不待我14、Better a little loss than a long sorrow长痛不如短痛15、Man struggles upwards，water flows downwards人往高处走，水往低处流16、Past pain is pleasure过去的痛苦即是快乐17、The wall has ears隔墙有耳18、Love me，love my dog爱屋及乌19、Don’t trouble trouble until trouble troubles you别自找麻烦20、The road is tortuous，but the future is bright道路是曲折的，前途是光明的21、One is always on a strange road，watching strange scenery and listening to strange music一个人总要走陌生的路，看陌生的风景，听陌生的音乐22、Reality is temporary while ideals are permanent现实是暂时的，理想是永恒的23、It is better to forgive and forget rather than to hold a grudge与其怀有宿怨，不如去宽恕和释怀来得好24、Do wrong once and you’ll never hear the end of it一失足成千古恨25、Speak of the devil and he appears说曹操，曹操到26、When the cat’s away, the mice will play山中无老虎，猴子称大王27、Alter what is changeable and accept what is immutable改变可以改变的，接受不能改变的28、A hedge between keeps friendship green君子之交淡如水29、Take the essence and discard the dregs取其精华，去其糟泊30、If you shed tears when you miss the sun，you also miss the stars如果你因为失去太阳而落泪，那么你也将失去群星31、There is a skeleton in the cupboard家丑不可外扬32、One eyewitness is better than ten hearsays百闻不如一见33、Don’t teach fish to swim不要班门弄斧34、It only takes a minute to get a crush on someone but an eternity to forget someone迷上某人只需一分钟，忘记某人却是一辈子的事35、At the touch of love everyone becomes a poet每一个沐浴爱河的人都是诗人36、Let nature take its right course船到桥头自然直37、Opportunity knocks but once机不可失，时不再来38、It’s never too late to mend亡羊补牢，犹未晚也39、A journey of a thousand miles begins with a single step千里之行，始于足下40、If winter comes，can spring be far behind？冬天来了，春天还会远吗？","categories":[{"name":"其他","slug":"other","permalink":"https://goodhelp.github.io/categories/other/"}],"tags":[{"name":"文章","slug":"文章","permalink":"https://goodhelp.github.io/tags/%E6%96%87%E7%AB%A0/"},{"name":"英语名言","slug":"英语名言","permalink":"https://goodhelp.github.io/tags/%E8%8B%B1%E8%AF%AD%E5%90%8D%E8%A8%80/"}]},{"title":"8088汇编速查手册","slug":"article/8088汇编速查手册","date":"2017-11-07T15:33:22.000Z","updated":"2021-09-10T15:34:26.778Z","comments":true,"path":"2017/11/07/239.html","link":"","permalink":"https://goodhelp.github.io/2017/11/07/239","excerpt":"","text":"汇编语言(assembly language)是一种用于电子计算机、微处理器、微控制器或其他可编程器件的低级语言，亦称为符号语言。在汇编语言中，用助记符(Mnemonics)代替机器指令的操作码，用地址符号(Symbol)或标号(Label)代替指令或操作数的地址。在不同的设备中，汇编语言对应着不同的机器语言指令集，通过汇编过程转换成机器指令。普遍地说，特定的汇编语言和特定的机器语言指令集是一一对应的不同平台之间不可直接移植。下面是汇编指令一、数据传输指令─────────────────────────────────────── 它们在存贮器和寄存器、寄存器和输入输出端口之间传送数据. 1. 通用数据传送指令. MOV 传送字或字节. MOVSX 先符号扩展,再传送. MOVZX 先零扩展,再传送. PUSH 把字压入堆栈. POP 把字弹出堆栈. PUSHA 把AX,CX,DX,BX,SP,BP,SI,DI依次压入堆栈. POPA 把DI,SI,BP,SP,BX,DX,CX,AX依次弹出堆栈. PUSHAD 把EAX,ECX,EDX,EBX,ESP,EBP,ESI,EDI依次压入堆栈. POPAD 把EDI,ESI,EBP,ESP,EBX,EDX,ECX,EAX依次弹出堆栈. BSWAP 交换32位寄存器里字节的顺序 XCHG 交换字或字节.( 至少有一个操作数为寄存器,段寄存器不可作为操作数) CMPXCHG 比较并交换操作数.( 第二个操作数必须为累加器AL/AX/EAX ) XADD 先交换再累加.( 结果在第一个操作数里 ) XLAT 字节查表转换. ── BX 指向一张 256 字节的表的起点, AL 为表的索引值 (0-255,即 0-FFH); 返回 AL 为查表结果. ( [BX+AL]-&gt;AL ) 2. 输入输出端口传送指令. IN I/O端口输入. ( 语法: IN 累加器, {端口号│DX} ) OUT I/O端口输出. ( 语法: OUT {端口号│DX},累加器 ) 输入输出端口由立即方式指定时, 其范围是 0-255; 由寄存器 DX 指定时, 其范围是 0-65535. 3. 目的地址传送指令. LEA 装入有效地址. 例: LEA DX,string ;把偏移地址存到DX. LDS 传送目标指针,把指针内容装入DS. 例: LDS SI,string ;把段地址:偏移地址存到DS:SI. LES 传送目标指针,把指针内容装入ES. 例: LES DI,string ;把段地址:偏移地址存到ES:DI. LFS 传送目标指针,把指针内容装入FS. 例: LFS DI,string ;把段地址:偏移地址存到FS:DI. LGS 传送目标指针,把指针内容装入GS. 例: LGS DI,string ;把段地址:偏移地址存到GS:DI. LSS 传送目标指针,把指针内容装入SS. 例: LSS DI,string ;把段地址:偏移地址存到SS:DI. 4. 标志传送指令. LAHF 标志寄存器传送,把标志装入AH. SAHF 标志寄存器传送,把AH内容装入标志寄存器. PUSHF 标志入栈. POPF 标志出栈. PUSHD 32位标志入栈. POPD 32位标志出栈.二、算术运算指令─────────────────────────────────────── ADD 加法. ADC 带进位加法. INC 加 1. AAA 加法的ASCII码调整. DAA 加法的十进制调整. SUB 减法. SBB 带借位减法. DEC 减 1. NEC 求反(以 0 减之). CMP 比较.(两操作数作减法,仅修改标志位,不回送结果). AAS 减法的ASCII码调整. DAS 减法的十进制调整. MUL 无符号乘法. IMUL 整数乘法. 以上两条,结果回送AH和AL(字节运算),或DX和AX(字运算), AAM 乘法的ASCII码调整. DIV 无符号除法. IDIV 整数除法. 以上两条,结果回送: 商回送AL,余数回送AH, (字节运算); 或 商回送AX,余数回送DX, (字运算). AAD 除法的ASCII码调整. CBW 字节转换为字. (把AL中字节的符号扩展到AH中去) CWD 字转换为双字. (把AX中的字的符号扩展到DX中去) CWDE 字转换为双字. (把AX中的字符号扩展到EAX中去) CDQ 双字扩展. (把EAX中的字的符号扩展到EDX中去)三、逻辑运算指令─────────────────────────────────────── AND 与运算. OR 或运算. XOR 异或运算. NOT 取反. TEST 测试.(两操作数作与运算,仅修改标志位,不回送结果). SHL 逻辑左移. SAL 算术左移.(=SHL) SHR 逻辑右移. SAR 算术右移.(=SHR) ROL 循环左移. ROR 循环右移. RCL 通过进位的循环左移. RCR 通过进位的循环右移. 以上八种移位指令,其移位次数可达255次. 移位一次时, 可直接用操作码. 如 SHL AX,1. 移位&gt;1次时, 则由寄存器CL给出移位次数. 如 MOV CL,04 SHL AX,CL四、串指令─────────────────────────────────────── DS:SI 源串段寄存器 :源串变址. ES:DI 目标串段寄存器:目标串变址. CX 重复次数计数器. AL/AX 扫描值. D标志 0表示重复操作中SI和DI应自动增量; 1表示应自动减量. Z标志 用来控制扫描或比较操作的结束. MOVS 串传送. ( MOVSB 传送字符. MOVSW 传送字. MOVSD 传送双字. ) CMPS 串比较. ( CMPSB 比较字符. CMPSW 比较字. ) SCAS 串扫描. 把AL或AX的内容与目标串作比较,比较结果反映在标志位. LODS 装入串. 把源串中的元素(字或字节)逐一装入AL或AX中. ( LODSB 传送字符. LODSW 传送字. LODSD 传送双字. ) STOS 保存串. 是LODS的逆过程. REP 当CX/ECX&lt;&gt;0时重复. REPE/REPZ 当ZF=1或比较结果相等,且CX/ECX&lt;&gt;0时重复. REPNE/REPNZ 当ZF=0或比较结果不相等,且CX/ECX&lt;&gt;0时重复. REPC 当CF=1且CX/ECX&lt;&gt;0时重复. REPNC 当CF=0且CX/ECX&lt;&gt;0时重复.五、程序转移指令─────────────────────────────────────── 1&gt;无条件转移指令 (长转移) JMP 无条件转移指令 CALL 过程调用 RET/RETF过程返回. 2&gt;条件转移指令 (短转移,-128到+127的距离内) ( 当且仅当(SF XOR OF)=1时,OP1&lt;OP2 ) JA/JNBE 不小于或不等于时转移. JAE/JNB 大于或等于转移. JB/JNAE 小于转移. JBE/JNA 小于或等于转移. 以上四条,测试无符号整数运算的结果(标志C和Z). JG/JNLE 大于转移. JGE/JNL 大于或等于转移. JL/JNGE 小于转移. JLE/JNG 小于或等于转移. 以上四条,测试带符号整数运算的结果(标志S,O和Z). JE/JZ 等于转移. JNE/JNZ 不等于时转移. JC 有进位时转移. JNC 无进位时转移. JNO 不溢出时转移. JNP/JPO 奇偶性为奇数时转移. JNS 符号位为 “0” 时转移. JO 溢出转移. JP/JPE 奇偶性为偶数时转移. JS 符号位为 “1” 时转移. 3&gt;循环控制指令(短转移) LOOP CX不为零时循环. LOOPE/LOOPZ CX不为零且标志Z=1时循环. LOOPNE/LOOPNZ CX不为零且标志Z=0时循环. JCXZ CX为零时转移. JECXZ ECX为零时转移. 4&gt;中断指令 INT 中断指令 INTO 溢出中断 IRET 中断返回 5&gt;处理器控制指令 HLT 处理器暂停, 直到出现中断或复位信号才继续. WAIT 当芯片引线TEST为高电平时使CPU进入等待状态. ESC 转换到外处理器. LOCK 封锁总线. NOP 空操作. STC 置进位标志位. CLC 清进位标志位. CMC 进位标志取反. STD 置方向标志位. CLD 清方向标志位. STI 置中断允许位. CLI 清中断允许位.六、伪指令─────────────────────────────────────── DW 定义字(2字节). PROC 定义过程. ENDP 过程结束. SEGMENT 定义段. ASSUME 建立段寄存器寻址. ENDS 段结束. END 程序结束.","categories":[{"name":"文章","slug":"article","permalink":"https://goodhelp.github.io/categories/article/"}],"tags":[{"name":"汇编","slug":"汇编","permalink":"https://goodhelp.github.io/tags/%E6%B1%87%E7%BC%96/"}]},{"title":"dos的debug命令详解","slug":"article/dos的debug命令详解","date":"2017-11-07T15:27:29.000Z","updated":"2021-09-10T15:32:20.537Z","comments":true,"path":"2017/11/07/238.html","link":"","permalink":"https://goodhelp.github.io/2017/11/07/238","excerpt":"","text":"DEBUG是DOS中的一个外部命令，从DOS 1.0起就带有此命令，因此可见此命令的重要性了。虽然此命令的功能非常强大，可以解决许多问题，可是对许多人来说，尤其是初学者来说，却非常不易掌握。因此，现将DEBUG的命令详细介绍一番，以让大家知道它的使用。Debug:A（汇编）直接将 8086/8087/8088 记忆码合并到内存。该命令从汇编语言语句创建可执行的机器码。所有数值都是十六进制格式，必须按一到四个字符输入这些数值。在引用的操作代码（操作码）前指定前缀记忆码。a [address]参数address指定键入汇编语言指令的位置。对 address 使用十六进制值，并键入不以“h”字符结尾的每个值。如果不指定地址，a 将在它上次停止处开始汇编。有关将数据输入到指定字节中的信息，请单击“相关主题”列表中的 Debug E（键入）。有关反汇编字节的信息，请单击“相关主题”列表中的 Debug U（反汇编）。说明使用记忆码段的替代记忆码为 cs:、ds:、es: 和 ss:。远程返回的记忆码是 retf。字符串处理的记忆码必须明确声明字符串大小。例如，使用 movsw 可以移动 16 位的字串，使用 movsb 可以移动 8 位字节串。汇编跳转和调用汇编程序根据字节替换自动将短、近和远的跳转及调用汇编到目标地址。通过使用 near 或 far 前缀可以替代这样的跳转或调用，如下例所示： 1234-a0100:05000100:0500 jmp 502 ; a 2-byte short jump0100:0502 jmp near 505 ; a 3-byte near jump0100:0505 jmp far 50a ; a 5-byte far jump 可以将 near 前缀缩写为 ne。区分字和字节内存位置当某个操作数可以引用某个字内存位置或者字节内存位置时，必须用前缀 word ptr 或者前缀 byte ptr 指定数据类型。可接受的缩写分别是 wo 和 by。以下范例显示两种格式： 12dec wo [si]neg byte ptr [128] 指定操作数Debug 使用包括在中括号 ([ ]) 的操作数引用内存地址的习惯用法。这是因为另一方面 Debug 不能区分立即操作数和内存地址的操作数。以下范例显示两种格式： 1234mov ax,21 ; load AX with 21hmov ax,[21] ; load AX with the; contents of; memory location 21h 使用伪指令使用 a 命令提供两个常用的伪指令：db 操作码，将字节值直接汇编到内存，dw 操作码，将字值直接汇编到内存。以下是两个伪指令的范例： 1234db 1,2,3,4,”THIS IS AN EXAMPLE”db ‘THIS IS A QUOTATION MARK:”‘db “THIS IS A QUOTATION MARK:&#x27;”dw 1000,2000,3000,”BACH” 范例a 命令支持所有形式的间接注册命令，如下例所示： 123add bx,34[bp+2].[si-1]pop [bp+di]push [si] ) 还支持所有操作码同义词，如下例所示： 1234loopz 100loope 100ja 200jnbe 200 对于 8087 操作码，必须指定 wait 或 fwait 前缀，如下例所示： 12fwait fadd st,st(3) ; this line assembles; an fwait prefix Debug:C（比较）比较内存的两个部分。c range address参数range指定要比较的内存第一个区域的起始和结束地址，或起始地址和长度。有关有效的 range 值的信息，请单击“相关主题”列表中的“Debug 说明”。address指定要比较的第二个内存区域的起始地址。有关有效 address 值的信息，请单击“相关主题”列表中的“Debug 说明”。说明如果 range 和 address 内存区域相同，Debug 将不显示任何内容而直接返回到 Debug 提示符。如果有差异，Debug 将按如下格式显示：address1 byte1 byte2 addess2范例以下命令具有相同效果： 12c100,10f 300c100l10 300 每个命令都对 100h 到 10Fh 的内存数据块与 300h 到 30Fh 的内存数据块进行比较。Debug 响应前面的命令并显示如下信息（假定 DS = 197F）： 123456789101112131415197F:0100 4D E4 197F:0300197F:0101 67 99 197F:0301197F:0102 A3 27 197F:0302197F:0103 35 F3 197F:0303197F:0104 97 BD 197F:0304197F:0105 04 35 197F:0305197F:0107 76 71 197F:0307197F:0108 E6 11 197F:0308197F:0109 19 2C 197F:0309197F:010A 80 0A 197F:030A197F:010B 36 7F 197F:030B197F:010C BE 22 197F:030C197F:010D 83 93 197F:030D197F:010E 49 77 197F:030E197F:010F 4F 8A 197F:030F 注意列表中缺少地址 197F:0106 和 197F:0306。这表明那些地址中的值是相同的。Debug:D（转储）显示一定范围内存地址的内容。d [range]参数range指定要显示其内容的内存区域的起始和结束地址，或起始地址和长度。有关有效的 range 值的信息，请单击“相关主题”列表中的“Debug 说明”。如果不指定 range，Debug 程序将从以前 d 命令中所指定的地址范围的末尾开始显示 128 个字节的内容。有关显示寄存器内容的信息，请单击“相关主题”列表中的 Debug R（寄存器）。说明当使用 d 命令时，Debug 以两个部分显示内存内容：十六进制部分（每个字节的值都用十六进制格式表示）和 ASCII 码部分（每个字节的值都用 ASCII 码字符表示)。每个非打印字符在显示的 ASCII 部分由句号 (.) 表示。每个显示行显示 16 字节的内容，第 8 字节和第 9 字节之间有一个连字符。每个显示行从 16 字节的边界上开始。范例假定键入以下命令：dcs:100 10fDebug 按以下格式显示范围中的内容：04BA:0100 54 4F 4D 00 53 41 57 59-45 52 00 00 00 00 00 00 TOM.SAWYER……如果在没有参数的情况下键入 d 命令，Debug 按以前范例中所描述的内容来编排显示格式。显示的每行以比前一行的地址大 16 个字节（如果是显示 40 列的屏幕，则为 8 个字节）的地址开头。对于后面键入的每个不带参数的 d 命令，Debug 将紧接在最后显示的命令后立即显示字节内容。如果键入以下命令，Debug 将从 CS:100 开始显示 20h 个字节的内容：dcs:100 l 20如果键入以下命令，Debug 将显示范围从 CS 段的 100h 到 115h 中所有字节的内容：dcs:100 115Debug:E（键入）将数据输入到内存中指定的地址。可以按十六进制或 ASCII 格式键入数据。以前存储在指定位置的任何数据全部丢失。e address参数address指定输入数据的第一个内存位置。list指定要输入到内存的连续字节中的数据。有关集成记忆码的信息，请单击“相关主题”列表中的 Debug A（汇编）。有关显示内存部分内容的信息，请单击“相关主题”列表中的 Debug D （转储）。说明使用 address 参数如果在没有指定可选的 list 参数的值情况下指定 address 的值，Debug 将显示地址和内容，在下一行重复地址，并等待您的输入。此时，您可以执行下列操作之一：替换字节值。为此，请在当前值后键入新值。如果您键入的值不是有效的十六进制值，或该值包含两个以上的数字，则 Debug 不会回显无效或额外的字符。进入下一个字节。为此，请按 SPACEBAR（空格键）。要更改该字节中的值，请在当前值后键入新值。如果按 SPACEBAR（空格键）时，移动超过了 8 位界限，Debug 程序将显示新的一行并在行首显示新地址。返回到前一个字节。为此，请按 HYPHEN 键 (-)。可以反复按 HYPHEN 键 (-) 向后移动超过多个字节。在按 HYPHEN 时，Debug 开始新行并显示当前地址和字节值。停止执行 e 命令。为此，请按 ENTER 键。在任何字节位置都可以按 ENTER。使用 list 参数如果指定 list 参数的值，随后的 e 命令将使用列表中的值替换现有的字节值。如果发生错误，将不更改任何字节值。List 值可以是十六进制字节或字符串。使用空格、逗号或制表符来分隔值。必须将字符串包括在单或双引号中。范例假定键入以下命令：ecs:100Debug 按下面的格式显示第一个字节的内容：04BA:0100 EB.要将该值更改为 41，请在插入点键入 41，如下所示：04BA:0100 EB.41_可以用一个 e 命令键入连续的字节值。在键入新值后按 SPACEBAR（空格键），而不是按 ENTER 键。Debug 显示下一个值。在此范例中，如果按三次 SPACEBAR（空格键），Debug 将显示下面的值：04BA:0100 EB.41 10. 00. BC._要将十六进制值 BC 更改为 42，请在插入点键入 42，如下所示：04BA:0100 EB.41 10. 00. BC.42_假定决定值 10 应该是 6F。要纠正该值，请按 HYPHEN 键两次以返回到地址 0101（值 10）。Debug 显示以下内容： 12304BA:0100 EB.41 10. 00. BC.42-04BA:0102 00.-04BA:0101 10._ 在插入点键入 6f 更改值，如下所示：04BA:0101 10.6f_按 ENTER 停止 e 命令并返回到 Debug 提示符下。以下是字符串项的范例：eds:100 “This is the text example”该字符串将从 DS:100 开始填充 24 个字节Debug:F（填充）使用指定的值填充指定内存区域中的地址。可以指定十六进制或 ASCII 格式表示的数据。任何以前存储在指定位置的数据将会丢失。参数range指定要填充内存区域的起始和结束地址，或起始地址和长度。关于有效的 range 值的信息，请单击“相关主题”列表中的“Debug 说明”。list指定要输入的数据。List 可以由十六进制数或引号包括起来的字符串组成。说明使用 range 参数如果 range 包含的字节数比 list 中的数值大，Debug 将在 list 中反复指派值，直到 range 中的所有字节全部填充。如果在 range 中的任何内存损坏或不存在，Debug 将显示错误消息并停止 f 命令。使用 list 参数如果 list 包含的数值多于 range 中的字节数，Debug 将忽略 list 中额外的值。范例假定键入以下命令：f04ba:100l100 42 45 52 54 41作为响应，Debug 使用指定的值填充从 04BA:100 到 04BA:1FF 的内存位置。Debug 重复这五个值直到 100h 个字节全部填满为止。Debug:G（转向）运行当前在内存中的程序。g [=address] [breakpoints]参数=address指定当前在内存中要开始执行的程序地址。如果不指定 address，Windows 2000 将从 CS:IP 寄存器中的当前地址开始执行程序。breakpoints指定可以设置为 g 命令的部分的 1 到 10 个临时断点。有关执行循环、重复的字符串指令、软件中断或子程序的信息，请单击“相关主题”列表中的 Debug P（执行）。有关执行指令的信息，请单击“相关主题”列表中的 Debug T（跟踪）。Debug:H（十六进制）对指定的两个参数执行十六进制运算。h value1 value2参数value1代表从 0 到 FFFFh 范围内的任何十六进制数字。value2代表从 0 到 FFFFh 范围内第二个十六进制数字。说明Debug 首先将指定的两个参数相加，然后从第一个参数中减去第二个参数。这些计算的结果显示在一行中：先计算和，然后计算差。范例假定键入以下命令：h19f 10aDebug 执行运算并显示以下结果。02A9 0095Debug:I（输入）从指定的端口读取并显示一个字节值。i port参数port按地址指定输入端口。地址可以是 16 位的值。有关将字节值发送到输出端口的信息，请单击“相关主题”列表中的 Debug O（输出）。范例假定键入以下命令：i2f8同时假定端口的字节值是 42h。Debug 读取该字节，并将其值显示如下：42Debug:L（加载）将某个文件或特定磁盘扇区的内容加载到内存。要从磁盘文件加载 BX:CX 寄存器中指定的字节数内容，请使用以下语法：l [address]要略过 Windows 2000 文件系统并直接加载特定的扇区，请使用以下语法：l address drive start number参数address指定要在其中加载文件或扇区内容的内存位置。如果不指定 address，Debug 将使用 CS 寄存器中的当前地址。drive指定包含读取指定扇区的磁盘的驱动器。该值是数值型：0 = A, 1 = B, 2 = C 等。start指定要加载其内容的第一个扇区的十六进制数。number指定要加载其内容的连续扇区的十六进制数。只有要加载特定扇区的内容而不是加载 debug 命令行或最近的 Debug n（名称）命令中指定的文件时，才能使用 drive、start 和 number 参数。有关指定用于 l 命令的文件的信息，请单击“相关主题”列表中的 Debug n（名称）。有关写入调试到磁盘的文件的信息，请单击“相关主题”列表中的 Debug w（写入）。注意使用不带参数的 l 命令当使用不带参数的 l 命令时，在 debug 命令行上指定的文件将加载到内存中，从地址 CS:100 开始。Debug 同时将 BX 和 CX 寄存器设置为加载的字节数。如果不在 debug 命令行指定文件，所装入的文件将是最近使用 n 命令经常指定的文件。使用具有 address 参数的 1 命令如果使用带 address 参数的 l 命令，Debug 将从内存位置 address 开始加载文件或指定扇区的内容。使用带全部参数的 l 命令如果使用带所有参数的 l 命令，Debug 将加载指定磁盘扇区的内容而不是加载文件。加载特定扇区的内容指定范围内的每个扇区均从 drive 读取。Debug 从 start 开始加载，直到在 number 中指定的扇区数中的内容全部被加载。加载 .exe 文件Debug 忽略 .exe 文件的地址 address 参数。如果指定 .exe 文件，Debug 将文件重新定位到 .exe 文件的标题中指定的加载地址。在 .exe 文件被加载到内存前，标题自身从 .exe 文件脱离，因此磁盘上的 .exe 文件大小与内存中的不同。如果要检查整个 .exe 文件，请使用不同的扩展名重命名文件。打开十六进制文件Debug 将具有 .hex 扩展名的文件认为十六进制格式文件。键入不带参数的 l 命令，可以加载从十六进制文件中指定的地址处开始的十六进制文件。如果键入的 l 命令包含 address 参数，Debug 将把指定的地址加到在十六进制文件中找到的地址上，以确定起始地址。范例假定启动 Debug 并键入以下命令：nfile.com现在可以键入 l 命令以加载 File.com。Debug 将加载文件并显示 Debug 提示符。假定需要从驱动器 C 将起始逻辑扇区为 15 (0Fh) 的 109 (6Dh) 个扇区的内容加载到起始地址为 04BA:0100 的内存中。为此，请键入以下命令：l04ba:100 2 0f 6dDebug:M（移动）将一个内存块中的内容复制到另一个内存块中。m range address参数range指定要复制内容的内存区域的起始和结束地址，或起始地址和长度。address指定要将 range 内容复制到该位置的起始地址。说明复制操作对现有数据的影响如果新数据没有写入正在被复制的数据块中的地址，则源数据将保持不变。但是，如果目标块已经包含数据(就象它在覆盖副本操作中一样)，则将改写该数据。（覆盖复制操作是指那些目标数据块部分内容覆盖原数据块部分内容的操作。）执行覆盖复制操作m 命令执行目标地址的覆盖复制操作，而不丢失数据。将改写的地址内容首先复制。因此，如果将较高位地址的数据复制到较低位地址，则复制操作从原块的最低位地址开始并向最高位地址进行。反之，如果要将数据从低地址复制到高地址，复制操作从原块的最高地址开始，向最低地址进行。范例假定键入以下命令：mcs:100 110 cs:500Debug 首先将 CS:110 地址中的内容复制到地址 CS:510 中，然后将 CS:10F 地址中的内容复制到 CS:50F 中，如此操作直至将 CS:100 地址中的内容复制到地址 CS:500 中。要查看结果，请使用 Debug d（转储）命令，并使用 m 命令指定目标地址Debug:N（名称）指定 Debug l（加载）或 w（写入）命令的可执行文件的名称，或者指定正在调试的可执行文件的参数。n [drive:][path] filename要指定测试的可执行文件的参数，请使用以下语法：n file-parameters参数如果在没有参数的情况下使用，则 n 命令清除当前规范。[drive:][path] filename指定要测试的可执行文件的位置和名称。file-parameters为正在测试的可执行文件指定参数和开关。有关将文件或指定磁盘扇区的内容加载到内存中的信息，请单击“相关主题”列表中的 Debug L（加载）。有关写入调试到磁盘的文件的信息，请单击“相关主题”列表中的 Debug W（写入）。说明n 命令的两个用途可以按两种方式使用 n 命令。首先，您可以使用它以指定后面的 l（加载）或 w（写入）命令所使用的文件。如果在没有命名所调试文件的情况下启动 Debug，必须在使用 l 命令加载文件之前使用命令 nfilename。在 CS:5C 为文件控制块 (FCB) 正确编排文件名的格式。其次，可以使用 n 命令指定被调试文件的命令行参数和开关。内存区域以下四个内存区域都会受到 n 命令的影响：内存位置内容CS:5C文件 1 的文件控制数据块 (FCB)CS:6C文件 2 的文件控制数据块 (FCB)CS:80n 命令行的长度（以字符表示）CS:81n 命令行字符的开头为 n 命令指定的第一个文件名被放在 CS:5C 的 FCB 中。如果指定第二个文件名，此名称将放置到 CS:6C 的 FCB 中。n 命令行上键入的字符数（除第一个字符之外，n）存储在位置 CS:80。n 命令行上的实际字符（再次，除了字母 n 之外）存储在以 CS:81 开头的位置。注意这些字符可以是在 Windows 2000 命令提示符下键入的命令中有效的任何开关和分隔符。范例假定已经启动 Debug，并加载了正在调试的程序 Prog.com。接着您决定为 Prog.com 指定两个参数并运行此程序。以下是此范例的命令序列：debug prog.comnparam1 param2g在这种情况下，Debug g（转向）命令会运行该程序，就好像您已在 Windows 2000 命令提示符后键入了如下命令：prog param1 param2所以，测试和调试反映 Prog.com 通常的运行时间环境。在下面的命令序列中，第一个 n 命令将 File1.exe 指定为后接的 l（加载）命令的文件，该命令将 File1.exe 加载到内存。第二个 n 命令指定 File1.exe 将使用的参数。最后，g 命令将运行 File1.exe 文件，就好像您在 Windows 2000 命令行中键入了 File1 File2.dat File2.dat 一样。nfile1.exelnfile2.dat file3.datg注意不要在 n 命令的第二种形式后使用 l 命令。还要注意，如果现在使用 w（写入）命令，Windows 2000 将使用名称 File2.dat 保存正在调试的文件 File1.exe。为避免出现此结果，应该总是在 l 或 w 命令之前立即使用 n 命令的第一种形式。Debug:O（输出）将字节值发送到输出端口。o port byte-value参数port通过地址指定输出端口。端口地址可以是 16 位值。byte-value指定要指向 port 的字节值。有关从输入端口读取字节值的信息，请单击“相关主题”列表中的 Debug I（输入）。范例要将字节值 4Fh 发送到地址为 2F8h 的输出端口，请键入以下命令：o2f8 4fDebug:P（执行）执行循环、重复的字符串指令、软件中断或子例程；或通过任何其他指令跟踪。参数=address指定第一个要执行指令的位置。如果不指定地址，则默认地址是在 CS:IP 寄存器中指定的当前地址。number指定在将控制返回给 Debug 之前要执行的指令数。默认值为 1。有关运行当前在内存中程序的信息，请单击“相关主题”列表中的 Debug G（转向）。有关执行指令的信息，请单击“相关主题”列表中的 Debug T（跟踪）。说明控制传送到要测试的程序当 p 命令将控制从 Debug 传送到要测试的程序时，该程序不间断运行，直到循环、重复字符串指令、软件中断或者完成了指定地址的子例程为止，或者直到执行了指定数量的机器指令为止。控制返回到 Debug。地址参数的限制如果 address 参数没有指定段，Debug 将使用被测试程序的 CS 寄存器。如果省略 address，程序将从 CS:IP 寄存器所指定的地址开始执行。必须在 address 参数之前使用等号 (=) 以便将它与 number 参数区分。如果在指定地址处的指令不是循环、重复的字符串指令、软件中断或子例程，则 p 命令与 Debug t（跟踪）命令的作用相同。使用 p 命令显示的邮件当 p 执行完一段说明后，Debug 显示出程序的寄存器内容、标志的状态以及下一段将要被执行的指令的解码形式。警告不能使用 p 命令跟踪只读内存 (ROM)。范例假定正在测试的程序在地址 CS:143F 处包含一个 call 指令。要运行 call 目标位置的子程序然后将控制返回到 Debug，请键入以下命令：p=143fDebug 按以下格式显示结果： 1234AX=0000 BX=0000 CX=0000 DX=0000 SP=FFEE BP=0000 SI=0000 DI=0000DS=2246 ES=2246 SS=2246 CS=2246 IP=1443 NV UP EI PL NZ AC PO NC2246:1442 7505 JNZ 144ADebug:Q（退出） 停止 Debug 会话，不保存当前测试的文件。当您键入 q 以后，控制返回到 Windows 2000 的命令提示符。q参数该命令不带参数。有关保存文件的信息，请单击“相关主题”列表中的 Debug W（写入）。Debug:R（寄存器）显示或改变一个或多个 CPU 寄存器的内容。r [register-name]参数无如果在没有参数的情况下使用，则 r 命令显示所有寄存器的内容以及寄存器存储区域中的标志。register-name指定要显示其内容的寄存器名。有关显示内存部分内容的信息，请单击“相关主题”列表中的 Debug D（转储）。有关反汇编字节的信息，请单击“相关主题”列表中的 Debug U（反汇编）。说明使用 r 命令如果指定了寄存器名称，Windows 2000 将显示以十六进制标记表示的寄存器的 16 位值，并将冒号显示为提示符。如果要更改包含在寄存器中的值，除非键入新值并按 ENTER 键；否则，请按 ENTER 键返回 Debug 提示符。有效寄存器名以下是 register-name 的有效值：ax、bx、cx、dx、sp、bp、si、di、ds、es、ss、cs、ip、pc 及 f。ip 和 pc 都引用指令指针。如果指定寄存器名称，而不是从前面的列表中指定，Windows 2000 将显示以下消息：br error使用 f 字符而不是寄存器名如果键入 f 字符代替寄存器名，Debug 将每个标记的当前设置显示为两字母代码，然后显示 Debug 提示符。要更改标志的设置，请从下表中键入适当的两字母代码：标志名设置清除溢出ovnv方向dn（减）up（增）中断ei（启用）di（禁用）正负ng（负）pl（正）零zrnz辅助进位acna奇偶校验pe（偶校验）po（奇校验）进位cync可以按任何顺序键入新的标志值。不需要在这些值之间留出空格。要停止 r 命令，请按 ENTER 键。任何没有指定新值的标志保持不变。用 r 命令显示的邮件如果为标记指定了多个值，Debug 将显示以下消息：df error如果指定没有在前面的表中列出的标志代码，Debug 将显示以下消息：bf error在这两种情况下，Debug 将忽略所有在无效项目之后指定的设置。Debug 的默认设置在启动 Debug 时，会将段寄存器设置到空闲内存的低端，指令指针设置为 0100h，清除所有标志，并且将其余寄存器设置为零，除了被设置为 FFEEh 的 sp 之外。Debug:R范例要查看所有寄存器的内容、所有标记的状态和当前位置的指令解码表，请键入以下命令：r如果当前位置是 CS:11A，显示外观将类似于以下内容：AX=0E00 BX=00FF CX=0007 DX=01FF SP=039D BP=0000 SI=005C DI=0000DS=04BA ES=04BA SS=04BA CS=O4BA IP=011A NV UP DI NG NZ AC PE NC04BA:011A CD21 INT 21要只查看标志的状态，请键入以下命令：rfDebug 按以下格式显示信息：NV UP DI NG NZ AC PE NC – _现在，您可以按任意顺序键入一个或多个有效的标志值，其中可以有或没有空格，如下所示：nv up di ng nz ac pe nc – pleicyDebug 结束 r 命令并显示 Debug 提示符。要查看更改，请键入 r 或 rf 命令。Debug 将显示以下内容：NV UP EI PL NZ AC PE CY – _按 ENTER 返回到 Debug 提示符。Debug:S（搜索）在某个地址范围搜索一个或多个字节值的模式。s range list参数range指定要搜索范围的开始和结束地址。有关 range 参数有效值的信息，请单击“相关主题”列表中的 Debug。list指定一个或多个字节值的模式，或要搜索的字符串。用空格或逗号分隔每个字节值和下一个字节值。将字符串值包括在引号中。说明如果 list 参数包含多个字节值，Debug 将只显示出现字节值的第一个地址。如果 list 只包含一个字节值，Debug 将显示指定范围内出现该值的所有地址。范例假定需要查找包含值 41 并且范围从 CS:100 到 CS:110 的所有地址。为此，请键入以下命令：scs:100 110 41Debug 按以下格式显示结果：04BA:010404BA:010D–以下命令在 CS:100 到 CS:1A0 的范围内搜索字符串“Ph”。scs:100 1a0 “Ph”Debug:U（反汇编）反汇编字节并显示相应的原语句，其中包括地址和字节值。反汇编代码看起来象已汇编文件的列表。u [range]参数无如果在没有参数的情况下使用，则 u 命令分解 20h 字节（默认值），从前面 u 命令所显示地址后的第一个地址开始。range指定要反汇编代码的起始地址和结束地址，或起始地址和长度。有关 range 参数有效值的信息，请单击“相关主题”列表中的 Debug。有关集成记忆码的信息，请单击“相关主题”列表中的 Debug A（汇编）。有关显示内存部分内容的信息，请单击“相关主题”列表中的 Debug D（转储）。范例要反汇编 16 (10h) 字节，从地址 04BA:0100 开始，请键入以下命令： 12345678910111213u04ba:100l10Debug 按以下格式显示结果：04BA:0100 206472 AND [SI+72],AH04BA:0103 69 DB 6904BA:0104 7665 JBE 016B04BA:0106 207370 AND [BP+DI+70],DH04BA:0109 65 DB 6504BA:010A 63 DB 6304BA:010B 69 DB 6904BA:010C 66 DB 6604BA:010D 69 DB 6904BA:010E 63 DB 6304BA:010F 61 DB 61 如果只显示从 04BA:0100 到 04BA:0108 特定地址的信息，请键入以下命令： 1234567u04ba:0100 0108Debug 显示以下内容：04BA:0100 206472 AND [SI+72],AH04BA:0103 69 DB 6904BA:0104 7665 JBE 016B04BA:0106 207370 AND [BP+DI+70],DHDebug:W（写入） 将文件或特定分区写入磁盘。要将在 BX:CX 寄存器中指定字节数的内容写入磁盘文件，请使用以下语法：w [address]要略过 Windows 2000 文件系统并直接写入特定的扇区，请使用以下语法：w address drive start number参数address指定要写到磁盘文件的文件或部分文件的起始内存地址。如果不指定 address，Debug 程序将从 CS:100 开始。关于 address 参数有效值的信息，请在“相关主题”列表中单击 Debug。drive指定包含目标盘的驱动器。该值是数值型：0 = A, 1 = B, 2 = C,等等。start指定要写入第一个扇区的十六进制数。number指定要写入的扇区数。有关指定用于 w 命令的文件的信息，请单击“相关主题”列表中的 Debug N（名称）。有关将文件或文件扇区内容加载到内存中的信息，请单击“相关主题”列表中的 Debug L（加载）。说明必须在启动 Debug 时或者在最近的 Debug n（名称）命令中指定磁盘文件的名字。这两种方法都可以将地址 CS:5C 处文件控制块的文件名正确地编排格式。在使用不带参数的 w 命令之前重新设置 BX:CX如果使用了 Debug g（转向）、t（跟踪）、p（执行）或 r（寄存器）命令，必须在使用无参数的 w 命令之前，将 BX:CX 寄存器复位。将修改后的文件写入磁盘如果修改文件但不更改文件名、长度或起始地址，Debug 仍然可以正确地将文件写入源磁盘位置。w 命令的限制不能用该命令写入 .exe 或 .hex 文件。警告因为略过 Windows 2000 文件句柄，所以写入特定的分区非常危险。如果键入错误的值，则磁盘文件结构很容易被损坏。范例假定要将起始地址为 CS:100 的内存内容写入到驱动器 B 的磁盘中。需要将数据从磁盘的逻辑扇区号 37h 开始并持续 2Bh 个扇区。为此，键入以下命令：wcs:100 1 37 2b当写操作完成时，Debug 再次显示 Debug 提示符。Debug:XA（分配扩展内存）分配扩展内存的指定页面数。要使用扩展内存，必须安装符合 4.0 版的 Lotus/Intel/Microsoft 扩展内存规范 (LIM EMS) 的扩展内存设备驱动程序。xa [count]参数count指定要分配的扩展内存的 16KB 页数。有关使用扩展内存的其他 Debug 命令的信息，请单击“相关主题”列表中的 XD（释放扩展内存）、XM（映射扩展内存页）或 XS（显示扩展内存状态）。说明如果指定的页面数可用，则 Debug 将显示消息，此消息表明所创建的句柄的十六进制数；否则，Debug 将显示错误消息。Debug:XA范例要分配扩展内存的 8 个页面，请键入以下命令：xa8如果命令成功，Debug 将显示类似的以下消息：Handle created=0003Debug:XD（释放扩展内存）释放指向扩展内存的句柄。要使用扩展内存，必须安装符合 4.0 版的 Lotus/Intel/Microsoft 扩展内存规范 (LIM EMS) 的扩展内存设备驱动程序。xd [handle]参数handle指定要释放的句柄。有关使用扩展内存的其他 Debug 命令的信息，请单击“相关主题”列表中 XA（分配扩展内存）、XM（映射扩展内存页） 或 XS（显示扩展内存状态）。范例要释放句柄 0003，请键入以下命令：xd 0003如果命令成功，Debug 将显示下列消息：Hdle 0003 deallocatedDebug:XM（映射扩展内存页）将属于指定句柄的扩展内存逻辑页映射到扩展内存的物理页。要使用扩展内存，必须安装符合 4.0 版的 Lotus/Intel/Microsoft 扩展内存规范 (LIM EMS) 的扩展内存设备驱动程序。xm [lpage] [ppage] [handle]参数lpage指定要映射到物理页 ppage 的扩展内存的逻辑页面号。ppage指定将 lpage 映射到的物理页面号。handle指定句柄。有关使用扩展内存的其他 Debug 命令的信息，请单击“相关主题”列表中的 XA（分配扩展内存）、XD（释放扩展内存）或 XS（显示扩展内存）。范例要将句柄 0003 的逻辑页 5 映射到物理页 2，请键入以下命令：xm 5 2 0003如果命令成功，Debug 将显示下列消息：Logical page 05 mapped to physical page 02Debug:XS（显示扩展内存状态）显示有关扩展内存状态的信息。要使用扩展内存，必须安装符合 4.0 版的 Lotus/Intel/Microsoft 扩展内存规范 (LIM EMS) 的扩展内存设备驱动程序。xs参数该命令不带参数。有关使用扩展内存的其他 Debug 命令的信息，请单击“相关主题”列表中的 XA（分配扩展内存）、XD（释放扩展内存）或 XM（映射扩展内存页）。说明Debug 显示的信息有如下格式： 1234Handle xx has xx pages allocatedPhysical page xx = Frame segment xxxx of a total xx EMS pages have been allocatedxx of a total xx EMS handles have been allocated 范例要显示扩展内存信息，请键入以下命令：xsDebug 显示与以下类似的信息： 12345678Handle 0000 has 0000 pages allocatedHandle 0001 has 0002 pages allocatedPhysical page 00 = Frame segment C000Physical page 01 = Frame segment C400Physical page 02 = Frame segment C800Physical page 03 = Frame segment CC002 of a total 80 EMS pages have been allocated2 of a total FF EMS handles have been allocated","categories":[{"name":"文章","slug":"article","permalink":"https://goodhelp.github.io/categories/article/"}],"tags":[{"name":"debug","slug":"debug","permalink":"https://goodhelp.github.io/tags/debug/"}]},{"title":"如何查看分析蓝屏代码dmp文件?","slug":"article/如何查看分析蓝屏代码dmp文件","date":"2017-11-07T15:14:53.000Z","updated":"2021-09-10T15:26:12.222Z","comments":true,"path":"2017/11/07/228.html","link":"","permalink":"https://goodhelp.github.io/2017/11/07/228","excerpt":"","text":"当您在运行Microsoft Windows 2000/XP/Server 2003、Microsoft Windows Vista/Server 2008、Microsoft Windows 7操作系统时，Windows可能会突然停止正常运行，并显示一副含有下述字样的蓝色背景错误信息画面： 1234A problem has been detected and Windows has been shut down to prevent damage to your computer.…… 此蓝色背景错误信息画面一般简称为“蓝屏（Blue Screen）”或“停止屏（Stop Error Screen）”，它可能会长时间停留在显示屏；也可能会在短时间显示之后自动重新启动计算机。windows蓝屏分析的方法是什么，遇到windows蓝屏如何查找原因，下面就进行说明! 一.原因分析：如果Windows因系统设置故障、软件故障、硬件故障、驱动程序故障、网络故障等各种类型的故障产生了严重的错误，引起Windows无法继续维持正常运行，Windows出于避免用户数据丢失及损坏计算机的考虑，将自动停止运行并显示“蓝屏”错误信息。 在默认的系统设置中，Windows 2000遇到“蓝屏”故障后“蓝屏”错误信息将长时间停留在显示屏，直到您关闭或重新启动计算机；Windows XP及后续版本的Windows遇到“蓝屏”故障后“蓝屏”错误信息将在短时间显示之后自动重新启动计算机。“蓝屏”故障发生后是否自动重新启动计算机取决于“启动与故障恢复”设置。您可以在“控制面板”中打开“系统”属性，切换至“高级”选项卡（如果是Windows Vista及以上版本的Windows请在“系统”属性左上方的工具栏中选择“高级系统设置”，确认用户帐户控制（UAC）安全提示，然后再切换至“高级”选项卡），在“高级”选项卡中打开“启动与故障恢复”。您可以在“启动与故障恢复”的选项中找到“自动重新启动”复选框，如果此复选框没有选中，Windows遇到“蓝屏”故障后“蓝屏”错误信息就将长时间停留在显示屏（Windows 2000的默认设置）；如果此复选框被选中，“蓝屏”错误信息就将在短时间显示之后自动重新启动计算机（Windows XP及后续版本的Windows的默认设置）。 二.蓝屏DMP故障文件在哪儿？有盘环境，如上图所示，蓝屏dmp就存放在%SystemRoot%\\Minidump 目录中 即 c:\\windows\\Minidump 如果上图中的设置为%SystemRoot%\\Minidump.dmp，那么蓝屏故障dmp文件就在c:\\windows中的Minidump.dmp文件. 无盘环境，dmp文件就在无盘服务端软件的相关目录中！根据无盘系统不同，存放位置不同，一般就在无盘软件的dmp目录中! WINdbg是什么，我们需要它做什么？ windbg是在windows平台下，强大的用户态和内核态调试工具。通过windbg工具的分析，我们可以从复杂的代码中找到蓝屏的驱动，文件，进程等来更准确的分析每次蓝屏背后的真凶。 三，windbg使用方法和技巧。 运行WinDbg软件，然后按【Ctrl+S】，在弹出的符号表设置窗里面输入SRVC:\\Symbolshttp://msdl.microsoft.com/download/symbols，然后点OK即可。如下图所示 按【Ctrl+D】，选择相对应的dmp文件，然后确定。如出下图所示，请选择NO跳过。当想打开第二个dmp文件时，需要先按【Shift+F5】来清除上一个dmp分析记录。 刚开始加载dmp文件可能较慢，等完全加完完毕后（如下图所示），大家对这些信息可能会眼花缭乱，不过没有关系，我们只需要关注几个重要的信息。 System Uptime（系统正常运行时间），如图所示，我们可以看出，这个顾客开机后7分15秒钟就蓝屏了，下面我们具体分析下这场蓝屏的因素 Probably caused by（可能蓝屏的原因），如下图所示，Probably caused by : nv4_disp.dll ( nv4_disp+2cacb )，我们可以这次蓝屏可能是 nv4_disp.dll这个文件引起的，让我们继续深入下去。 !analyze -v命令解析，在下面的对话框输入!analyze -v或点击!analyze -v命令会出现如下图所示，BUGCHECK_STR: 0x8E是指蓝屏代码为8E，PROCESS_NAME: mir2.dat，这个是指这次蓝屏引起的应用程序。 ！process命令验证，在下面的对话框输入！process命令，会出现如下图所示，基本上可以确定就是mir2.dat了。 通过上面7个步骤我们得知了2个重要的信息分别是是nv4_disp.dll和mir2.dat，那么这这2个文件是哪里的？那我们就要去客户机找相关信息了，最后得知 nv4_disp.dllNvidia显卡驱动的一个文件，mir2.dat是传奇世界的文件，由此我们可以判断此次蓝屏是由于显卡驱动的问题导致顾客在玩传奇世界时出问题了，后来果断更新显卡驱动解决了这次蓝屏的问题。 最后给大家一些分析dmp文件的建议： 我们知道，电脑蓝屏的因素很多，比如现在进入夏天了，由于天气过热温度过高等的原因也是很有可能导致机器蓝屏，并不是每次dmp文件都能准确的分析出有用的结论，这个还需要大家通过多分析，多总结而获得这方面的经验来对症下药。如果你网吧有200台机器，每天有接近四分之一的机器蓝屏，你可以通过我们软件获取的dmp文件来观察其代码是不是一致，如果是一样或者大多数都一样的代码，可以使用windbg工具按照上面的步骤来分析一下。 下面提供windbg下载地址：windbg 10：https://tool.pediy.com/index-detail-5.htmwindbg 6汉化版：点击下载","categories":[{"name":"文章","slug":"article","permalink":"https://goodhelp.github.io/categories/article/"}],"tags":[{"name":"蓝屏代码","slug":"蓝屏代码","permalink":"https://goodhelp.github.io/tags/%E8%93%9D%E5%B1%8F%E4%BB%A3%E7%A0%81/"}]},{"title":"“春宵一刻值千金”古代的优美情诗","slug":"other/“春宵一刻值千金”古代的优美情诗","date":"2017-10-30T15:11:10.000Z","updated":"2021-09-10T16:33:46.410Z","comments":true,"path":"2017/10/30/135.html","link":"","permalink":"https://goodhelp.github.io/2017/10/30/135","excerpt":"","text":"——《江城子》 苏轼十年生死两茫茫，不思量，自难忘。千里孤坟，无处话凄凉。纵使相逢应不识，尘满面，鬓如霜。夜来幽梦忽还乡，小轩窗，正梳妆。相顾无言，惟有泪千行。料得年年肠断处，明月夜，短松冈。 ——纳兰性德《木兰词·拟古决绝词柬友》 人生若只如初见，何事秋风悲画扇； 等闲变却故人心，却道故人心易变。 骊山语罢清宵半，泪雨霖铃终不怨； 何如薄幸锦衣郎，比翼连枝当日愿。 ——《花月痕》 多情自古空余恨，好梦由来最易醒。 岂是拈花难解脱，可怜飞絮太飘零。 ——元稹《遣悲怀•其二》 昔日戏言身后事，今朝都到眼前来。 衣裳已施行看尽，针线犹存未忍开。 尚想旧情怜婢仆，也曾因梦送钱财。 诚知此恨人人有，贫贱夫妻百事哀。 ——黄増《集杭州俗语诗》 色不迷人人自迷，情人眼里出西施。 有缘千里来相会，三笑徒然当一痴。 ——李贺《金铜仙人辞汉歌》 茂陵刘郎秋风客，夜闻马嘶晓无迹。 画栏桂树悬秋香，三十六宫土花碧。 魏官牵车指千里，东关酸风射眸子。 空将汉月出宫门，忆君清泪如铅水。 衰兰送客咸阳道，天若有情天亦老。 携盘独出月荒凉，渭城已远波声小。 ——杜甫《前出塞·其六》 挽弓当挽强，用箭当用长。 射人先射马，擒贼先擒王。 杀人亦有限，列国自有疆。 苟能制侵陵，岂在多杀伤。 ——黄景仁《杂感》 仙佛茫茫两未成，只知独夜不平鸣。 风蓬飘尽悲歌气，泥絮沾来薄幸名。 十有九人堪白眼，百无一用是书生。 莫因诗卷愁成谶，春鸟秋虫自作声。 ——龚自珍《夜作》 沉沉心事北南东，一睨人材海内空。 壮岁始参周史席，髫年惜堕晋贤风。 功高拜将成仙外，才尽回肠荡气中。 万一禅关砉然破，美人如玉剑如虹。 ——罗隐《自遣》 得即高歌失即休，多愁多恨亦悠悠。 今朝有酒今朝醉，明日愁来明日愁。 ——夏元鼎《绝句》 崆峒访道至湘湖，万卷诗书看转愚。 踏破铁鞋无觅处，得来全不费工夫。 ——苏轼《戏张先》 十八新娘八十郎，苍苍白发对红妆。 鸳鸯被里成双夜，一树梨花压海棠。 ——黄蘖禅师《上堂开示颂》 尘劳回脱事非常，紧把绳头做一场。 不经一番寒彻骨，那得梅花扑鼻香。 ——陈于之《题桃花扇》 玉树歌残声已陈，南朝宫殿柳条新； 福王少小风流惯，不爱江山爱美人。 ——俞文豹《清夜录》 近水楼台先得月，向阳花木易为春。 ——苏轼《蝶恋花·春景》 花褪残红青杏小。燕子飞时，绿水人家绕。 枝上柳绵吹又少。天涯何处无芳草。 墙里秋千墙外道。墙外行人，墙里佳人笑。 笑渐不闻声渐悄，多情却被无情恼。 ——白居易《长恨歌》 临别殷勤重寄词，词中有誓两心知。 七月七日长生殿，夜半无人私语时。 在天愿作比翼鸟，在地愿为连理枝。 天长地久有时尽，此恨绵绵无绝期。 ——曹松《己亥岁》 泽国江山入战图，生民何计乐樵苏。 凭君莫话封侯事，一将功成万骨枯。 ——苏轼《春宵》 春宵一刻值千金，花有清香月有阴。 歌管楼台声细细，秋千院落夜沉沉。","categories":[{"name":"其他","slug":"other","permalink":"https://goodhelp.github.io/categories/other/"}],"tags":[{"name":"情诗","slug":"情诗","permalink":"https://goodhelp.github.io/tags/%E6%83%85%E8%AF%97/"},{"name":"文章","slug":"文章","permalink":"https://goodhelp.github.io/tags/%E6%96%87%E7%AB%A0/"}]},{"title":"ikeeper爱克吧去广告方法","slug":"article/ikeeper爱克吧去广告方法","date":"2017-10-26T15:04:51.000Z","updated":"2021-09-10T15:08:53.512Z","comments":true,"path":"2017/10/26/60.html","link":"","permalink":"https://goodhelp.github.io/2017/10/26/60","excerpt":"","text":"ikeeper爱克吧为网吧实名管理系统 官网http://www.echina110.com如何去掉ikeeper爱克吧的桌面广告呢？这儿介绍两种方种，虽然ikeeper爱克吧已经开始下线，开始使用ikeeper 8圈管理系统，在这儿仍然记录一下如何去掉ikeeper爱克吧广告的方法，至于ikeeper 8圈去广告方法，后续我们会放上相应的文章，8圈去广告已经没有爱克吧简单了!方法一自定义广告使用说明 爱克吧的广告地址为 http://activedesktop.echina110.com/advertises/desktopx.asp?id=5001030050 desktopx.asp的内容为: Http://你的站点的IP/advertises/adv/ad.cab 123 只要把activedesktop.echina110.com域名屏蔽，就可以去广告，只要把这个域名重定向，然后自定义cab的内容就可以显示自定义的广告!至于怎么屏蔽，可以使用路由器中的域名过滤和重定向就ＯＫ了。 其中desktopx.asp的内容说明如下：第一项指向你的站点中的ad.cab（文件可以为任何，但必须是cab压缩包，不能是zip或rar或7z等其他压缩包，制作cab压缩包，可以使用xp自带的IEXPRESS.EXE) 路径不一定是在advertises/adv可以改为其他路径,但该路径下必须有ad.cab,这个文件名不能变 其后的123可以为任意数字! 同时请注意desktopx.asp的路径不能变,只能在http://你的站点IP/advertises/desktopx.asp确保打开此 asp页面在浏览器中返回的应该为Http://你的ad.cab路径/ad.cab 123 方法二 1.用UltraEdit等编辑二进制工具打开C:\\Program Files (x86)\\Client\\entry.exe(如果是xp是C:\\Program Files\\Client\\entry.exe)，点击编辑中查找.lib。2.把.lib修改为.sib或其他的字符（其实就是修改cab广告包中的可执行文件的数据扩展名，修改后ikeeper爱克吧就不会执行cab广告包中广告文件，客户机也就不会有随机文件运行了，但桌面锁屏广告是存在的，其实去广告的最终目的是不能让广告影响到客户机性能或影响到用户的体验！）","categories":[{"name":"文章","slug":"article","permalink":"https://goodhelp.github.io/categories/article/"}],"tags":[{"name":"去广告","slug":"去广告","permalink":"https://goodhelp.github.io/tags/%E5%8E%BB%E5%B9%BF%E5%91%8A/"}]}],"categories":[{"name":"源码","slug":"code","permalink":"https://goodhelp.github.io/categories/code/"},{"name":"软件","slug":"soft","permalink":"https://goodhelp.github.io/categories/soft/"},{"name":"其他","slug":"other","permalink":"https://goodhelp.github.io/categories/other/"},{"name":"文章","slug":"article","permalink":"https://goodhelp.github.io/categories/article/"}],"tags":[{"name":"delphi","slug":"delphi","permalink":"https://goodhelp.github.io/tags/delphi/"},{"name":"锐起","slug":"锐起","permalink":"https://goodhelp.github.io/tags/%E9%94%90%E8%B5%B7/"},{"name":"aardio","slug":"aardio","permalink":"https://goodhelp.github.io/tags/aardio/"},{"name":"内存修改","slug":"内存修改","permalink":"https://goodhelp.github.io/tags/%E5%86%85%E5%AD%98%E4%BF%AE%E6%94%B9/"},{"name":"listview","slug":"listview","permalink":"https://goodhelp.github.io/tags/listview/"},{"name":"autoit3","slug":"autoit3","permalink":"https://goodhelp.github.io/tags/autoit3/"},{"name":"dxva2","slug":"dxva2","permalink":"https://goodhelp.github.io/tags/dxva2/"},{"name":"显示器设置","slug":"显示器设置","permalink":"https://goodhelp.github.io/tags/%E6%98%BE%E7%A4%BA%E5%99%A8%E8%AE%BE%E7%BD%AE/"},{"name":"关机重启","slug":"关机重启","permalink":"https://goodhelp.github.io/tags/%E5%85%B3%E6%9C%BA%E9%87%8D%E5%90%AF/"},{"name":"电源键","slug":"电源键","permalink":"https://goodhelp.github.io/tags/%E7%94%B5%E6%BA%90%E9%94%AE/"},{"name":"人物故事","slug":"人物故事","permalink":"https://goodhelp.github.io/tags/%E4%BA%BA%E7%89%A9%E6%95%85%E4%BA%8B/"},{"name":"视频","slug":"视频","permalink":"https://goodhelp.github.io/tags/%E8%A7%86%E9%A2%91/"},{"name":"2008奥运会","slug":"2008奥运会","permalink":"https://goodhelp.github.io/tags/2008%E5%A5%A5%E8%BF%90%E4%BC%9A/"},{"name":"励志视频","slug":"励志视频","permalink":"https://goodhelp.github.io/tags/%E5%8A%B1%E5%BF%97%E8%A7%86%E9%A2%91/"},{"name":"中国春节","slug":"中国春节","permalink":"https://goodhelp.github.io/tags/%E4%B8%AD%E5%9B%BD%E6%98%A5%E8%8A%82/"},{"name":"新年视频","slug":"新年视频","permalink":"https://goodhelp.github.io/tags/%E6%96%B0%E5%B9%B4%E8%A7%86%E9%A2%91/"},{"name":"time小青龙伴奏","slug":"time小青龙伴奏","permalink":"https://goodhelp.github.io/tags/time%E5%B0%8F%E9%9D%92%E9%BE%99%E4%BC%B4%E5%A5%8F/"},{"name":"音乐","slug":"音乐","permalink":"https://goodhelp.github.io/tags/%E9%9F%B3%E4%B9%90/"},{"name":"dcef3","slug":"dcef3","permalink":"https://goodhelp.github.io/tags/dcef3/"},{"name":"去广告","slug":"去广告","permalink":"https://goodhelp.github.io/tags/%E5%8E%BB%E5%B9%BF%E5%91%8A/"},{"name":"文章","slug":"文章","permalink":"https://goodhelp.github.io/tags/%E6%96%87%E7%AB%A0/"},{"name":"座右铭","slug":"座右铭","permalink":"https://goodhelp.github.io/tags/%E5%BA%A7%E5%8F%B3%E9%93%AD/"},{"name":"情诗","slug":"情诗","permalink":"https://goodhelp.github.io/tags/%E6%83%85%E8%AF%97/"},{"name":"英语名言","slug":"英语名言","permalink":"https://goodhelp.github.io/tags/%E8%8B%B1%E8%AF%AD%E5%90%8D%E8%A8%80/"},{"name":"汇编","slug":"汇编","permalink":"https://goodhelp.github.io/tags/%E6%B1%87%E7%BC%96/"},{"name":"debug","slug":"debug","permalink":"https://goodhelp.github.io/tags/debug/"},{"name":"蓝屏代码","slug":"蓝屏代码","permalink":"https://goodhelp.github.io/tags/%E8%93%9D%E5%B1%8F%E4%BB%A3%E7%A0%81/"}]}